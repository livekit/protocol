syntax = "proto3";

package livekit;
option go_package = "github.com/livekit/protocol/livekit";
option csharp_namespace = "LiveKit.Proto";
option ruby_package = "LiveKit::Proto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "livekit_models.proto";

service AnalyticsRecorderService {
  rpc IngestStats(stream AnalyticsStats) returns (google.protobuf.Empty){};
  rpc IngestEvents(stream AnalyticsEvents) returns (google.protobuf.Empty){};
}

enum StreamType {
  UPSTREAM = 0;
  DOWNSTREAM = 1;
}

message AnalyticsStat {
  string analytics_key = 1;
  StreamType kind = 2;
  google.protobuf.Timestamp time_stamp = 3;
  string node = 4;
  string room_id = 5;
  string participant_id = 6;
  double jitter = 7;
  uint64 total_packets = 8;
  uint64 packet_lost = 9;
  uint64 delay = 10;
  uint64 total_bytes = 11;
  int32 nack_count = 12;
  int32 pli_count = 13;
  int32 fir_count = 14;
  string room_name = 15;
  float connection_score = 16;
  string track_id = 17;
  uint32 rtt = 18;
}

message AnalyticsStats {
  repeated AnalyticsStat stats = 1;
}

enum AnalyticsEventType {
  ROOM_CREATED = 0;
  ROOM_ENDED = 1;
  PARTICIPANT_JOINED = 2;
  PARTICIPANT_LEFT = 3;
  TRACK_PUBLISHED = 4;
  TRACK_UNPUBLISHED = 5;
  TRACK_SUBSCRIBED = 6;
  TRACK_UNSUBSCRIBED = 7;
  RECORDING_STARTED = 8;
  RECORDING_ENDED = 9;
}


message AnalyticsEvent {
  AnalyticsEventType type = 1;
  google.protobuf.Timestamp timestamp = 2;
  string room_id = 3;
  Room room = 4;
  string participant_id = 5;
  ParticipantInfo participant = 6;
  string track_id = 7;
  TrackInfo track = 8;
  string recording_id = 9;
  string analytics_key = 10;
  ClientInfo  client_info = 11;
}

message AnalyticsEvents {
  repeated AnalyticsEvent events = 1;
}
