syntax = "proto3";

package livekit;
option go_package = "github.com/livekit/livekit-server/proto/livekit";

message Room {
  string sid = 1;
  string name = 2;
  uint32 empty_timeout = 3;
  uint32 max_participants = 4;
  int64 creation_time = 5;
  string turn_password = 6;
  repeated Codec enabled_codecs = 7;
}

message Codec {
  string mime = 1;
  string fmtp_line = 2;
}

message ParticipantInfo {
  enum State {
    // websocket' connected, but not offered yet
    JOINING = 0;
    // server received client offer
    JOINED = 1;
    // ICE connectivity established
    ACTIVE = 2;
    // WS disconnected
    DISCONNECTED = 3;
  }
  string sid = 1;
  string identity = 2;
  State state = 3;
  repeated TrackInfo tracks = 4;
  string metadata = 5;
  // timestamp when participant joined room
  int64 joined_at = 6;
  // hidden participant (used for recording)
  bool hidden = 7;
}

enum TrackType {
  AUDIO = 0;
  VIDEO = 1;
  DATA = 2;
}

message TrackInfo {
  string sid = 1;
  TrackType type = 2;
  string name = 3;
  bool muted = 4;
  // original width of video (unset for audio)
  // clients may receive a lower resolution version with simulcast
  uint32 width = 5;
  // original height of video (unset for audio)
  uint32 height = 6;
  // true if track is simulcasted
  bool simulcast = 7;
}

// old DataTrack message
message DataMessage {
  oneof value {
    string text = 1;
    bytes binary = 2;
  }
}

message RecordingInput {
  // either url or template required
  string url = 1;
  RecordingTemplate template = 2;
  int32 width = 3;
  int32 height = 4;
  int32 depth = 5;
  int32 framerate = 6;
}

message RecordingTemplate {
  string layout = 1;
  string ws_url = 2;
  // either token or room name required
  string token = 3;
  string room_name = 4;
}

message RecordingOutput {
  // either file, rtmp, or s3 required
  string file = 1;
  string rtmp = 2;
  RecordingS3Output s3 = 3;
  int32 width = 4;
  int32 height = 5;
  string audio_bitrate = 6;
  string audio_frequency = 7;
  string video_bitrate = 8;
  string video_buffer = 9;
}

message RecordingS3Output {
  string bucket = 1;
  string key = 2;
  // optional
  string access_key = 3;
  string secret = 4;
}
