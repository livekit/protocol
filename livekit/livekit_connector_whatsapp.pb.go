// Copyright 2025 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: livekit_connector_whatsapp.proto

package livekit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WhatsAppCallDirection int32

const (
	WhatsAppCallDirection_WHATSAPP_CALL_DIRECTION_INBOUND  WhatsAppCallDirection = 0
	WhatsAppCallDirection_WHATSAPP_CALL_DIRECTION_OUTBOUND WhatsAppCallDirection = 2
)

// Enum value maps for WhatsAppCallDirection.
var (
	WhatsAppCallDirection_name = map[int32]string{
		0: "WHATSAPP_CALL_DIRECTION_INBOUND",
		2: "WHATSAPP_CALL_DIRECTION_OUTBOUND",
	}
	WhatsAppCallDirection_value = map[string]int32{
		"WHATSAPP_CALL_DIRECTION_INBOUND":  0,
		"WHATSAPP_CALL_DIRECTION_OUTBOUND": 2,
	}
)

func (x WhatsAppCallDirection) Enum() *WhatsAppCallDirection {
	p := new(WhatsAppCallDirection)
	*p = x
	return p
}

func (x WhatsAppCallDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WhatsAppCallDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_livekit_connector_whatsapp_proto_enumTypes[0].Descriptor()
}

func (WhatsAppCallDirection) Type() protoreflect.EnumType {
	return &file_livekit_connector_whatsapp_proto_enumTypes[0]
}

func (x WhatsAppCallDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WhatsAppCallDirection.Descriptor instead.
func (WhatsAppCallDirection) EnumDescriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{0}
}

type DialWhatsAppCallRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of the business that is initiating the call
	WhatsappPhoneNumberId string `protobuf:"bytes,1,opt,name=whatsapp_phone_number_id,json=whatsappPhoneNumberId,proto3" json:"whatsapp_phone_number_id,omitempty"`
	// The number of the user that is supossed to receive the call
	WhatsappToPhoneNumber string `protobuf:"bytes,2,opt,name=whatsapp_to_phone_number,json=whatsappToPhoneNumber,proto3" json:"whatsapp_to_phone_number,omitempty"`
	// The API key of the business that is initiating the call
	WhatsappApiKey string `protobuf:"bytes,3,opt,name=whatsapp_api_key,json=whatsappApiKey,proto3" json:"whatsapp_api_key,omitempty"`
	// An arbitrary string you can pass in that is useful for tracking and logging purposes.
	WhatsappBizOpaqueCallbackData string `protobuf:"bytes,4,opt,name=whatsapp_biz_opaque_callback_data,json=whatsappBizOpaqueCallbackData,proto3" json:"whatsapp_biz_opaque_callback_data,omitempty"`
	// What LiveKit room should this participant be connected too
	RoomName string `protobuf:"bytes,5,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	// Optional agents to dispatch the call to
	Agents []*RoomAgentDispatch `protobuf:"bytes,6,rep,name=agents,proto3" json:"agents,omitempty"`
	// Optional identity of the participant in LiveKit room
	ParticipantIdentity string `protobuf:"bytes,7,opt,name=participant_identity,json=participantIdentity,proto3" json:"participant_identity,omitempty"`
	// Optional name of the participant in LiveKit room
	ParticipantName string `protobuf:"bytes,8,opt,name=participant_name,json=participantName,proto3" json:"participant_name,omitempty"`
	// Optional user-defined metadata. Will be attached to a created Participant in the room.
	ParticipantMetadata string `protobuf:"bytes,9,opt,name=participant_metadata,json=participantMetadata,proto3" json:"participant_metadata,omitempty"`
	// Optional user-defined attributes. Will be attached to a created Participant in the room.
	ParticipantAttributes map[string]string `protobuf:"bytes,10,rep,name=participant_attributes,json=participantAttributes,proto3" json:"participant_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Country where the call terminates as ISO 3166-1 alpha-2 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). This will be used by the livekit infrastructure to route calls.
	DestinationCountry string `protobuf:"bytes,11,opt,name=destination_country,json=destinationCountry,proto3" json:"destination_country,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DialWhatsAppCallRequest) Reset() {
	*x = DialWhatsAppCallRequest{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DialWhatsAppCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialWhatsAppCallRequest) ProtoMessage() {}

func (x *DialWhatsAppCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialWhatsAppCallRequest.ProtoReflect.Descriptor instead.
func (*DialWhatsAppCallRequest) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{0}
}

func (x *DialWhatsAppCallRequest) GetWhatsappPhoneNumberId() string {
	if x != nil {
		return x.WhatsappPhoneNumberId
	}
	return ""
}

func (x *DialWhatsAppCallRequest) GetWhatsappToPhoneNumber() string {
	if x != nil {
		return x.WhatsappToPhoneNumber
	}
	return ""
}

func (x *DialWhatsAppCallRequest) GetWhatsappApiKey() string {
	if x != nil {
		return x.WhatsappApiKey
	}
	return ""
}

func (x *DialWhatsAppCallRequest) GetWhatsappBizOpaqueCallbackData() string {
	if x != nil {
		return x.WhatsappBizOpaqueCallbackData
	}
	return ""
}

func (x *DialWhatsAppCallRequest) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *DialWhatsAppCallRequest) GetAgents() []*RoomAgentDispatch {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *DialWhatsAppCallRequest) GetParticipantIdentity() string {
	if x != nil {
		return x.ParticipantIdentity
	}
	return ""
}

func (x *DialWhatsAppCallRequest) GetParticipantName() string {
	if x != nil {
		return x.ParticipantName
	}
	return ""
}

func (x *DialWhatsAppCallRequest) GetParticipantMetadata() string {
	if x != nil {
		return x.ParticipantMetadata
	}
	return ""
}

func (x *DialWhatsAppCallRequest) GetParticipantAttributes() map[string]string {
	if x != nil {
		return x.ParticipantAttributes
	}
	return nil
}

func (x *DialWhatsAppCallRequest) GetDestinationCountry() string {
	if x != nil {
		return x.DestinationCountry
	}
	return ""
}

type DialWhatsAppCallResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Call ID sent by Meta
	WhatsappCallId string `protobuf:"bytes,1,opt,name=whatsapp_call_id,json=whatsappCallId,proto3" json:"whatsapp_call_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DialWhatsAppCallResponse) Reset() {
	*x = DialWhatsAppCallResponse{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DialWhatsAppCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialWhatsAppCallResponse) ProtoMessage() {}

func (x *DialWhatsAppCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialWhatsAppCallResponse.ProtoReflect.Descriptor instead.
func (*DialWhatsAppCallResponse) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{1}
}

func (x *DialWhatsAppCallResponse) GetWhatsappCallId() string {
	if x != nil {
		return x.WhatsappCallId
	}
	return ""
}

type DisconnectWhatsAppCallRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Call ID sent by Meta
	WhatsappCallId string `protobuf:"bytes,1,opt,name=whatsapp_call_id,json=whatsappCallId,proto3" json:"whatsapp_call_id,omitempty"`
	WhatsappApiKey string `protobuf:"bytes,2,opt,name=whatsapp_api_key,json=whatsappApiKey,proto3" json:"whatsapp_api_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DisconnectWhatsAppCallRequest) Reset() {
	*x = DisconnectWhatsAppCallRequest{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectWhatsAppCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectWhatsAppCallRequest) ProtoMessage() {}

func (x *DisconnectWhatsAppCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectWhatsAppCallRequest.ProtoReflect.Descriptor instead.
func (*DisconnectWhatsAppCallRequest) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{2}
}

func (x *DisconnectWhatsAppCallRequest) GetWhatsappCallId() string {
	if x != nil {
		return x.WhatsappCallId
	}
	return ""
}

func (x *DisconnectWhatsAppCallRequest) GetWhatsappApiKey() string {
	if x != nil {
		return x.WhatsappApiKey
	}
	return ""
}

type DisconnectWhatsAppCallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectWhatsAppCallResponse) Reset() {
	*x = DisconnectWhatsAppCallResponse{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectWhatsAppCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectWhatsAppCallResponse) ProtoMessage() {}

func (x *DisconnectWhatsAppCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectWhatsAppCallResponse.ProtoReflect.Descriptor instead.
func (*DisconnectWhatsAppCallResponse) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{3}
}

type ConnectWhatsAppCallRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of the business that is conencting the call
	WhatsappPhoneNumberId string `protobuf:"bytes,1,opt,name=whatsapp_phone_number_id,json=whatsappPhoneNumberId,proto3" json:"whatsapp_phone_number_id,omitempty"`
	// The API key of the business that is connecting the call
	WhatsappApiKey string `protobuf:"bytes,2,opt,name=whatsapp_api_key,json=whatsappApiKey,proto3" json:"whatsapp_api_key,omitempty"`
	// Call ID sent by Meta
	WhatsappCallId string `protobuf:"bytes,3,opt,name=whatsapp_call_id,json=whatsappCallId,proto3" json:"whatsapp_call_id,omitempty"`
	// The call connect webhook comes with SDP from Meta
	// It is the answer SDP for a business initiated call
	Sdp           *SessionDescription `protobuf:"bytes,4,opt,name=sdp,proto3" json:"sdp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectWhatsAppCallRequest) Reset() {
	*x = ConnectWhatsAppCallRequest{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectWhatsAppCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectWhatsAppCallRequest) ProtoMessage() {}

func (x *ConnectWhatsAppCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectWhatsAppCallRequest.ProtoReflect.Descriptor instead.
func (*ConnectWhatsAppCallRequest) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectWhatsAppCallRequest) GetWhatsappPhoneNumberId() string {
	if x != nil {
		return x.WhatsappPhoneNumberId
	}
	return ""
}

func (x *ConnectWhatsAppCallRequest) GetWhatsappApiKey() string {
	if x != nil {
		return x.WhatsappApiKey
	}
	return ""
}

func (x *ConnectWhatsAppCallRequest) GetWhatsappCallId() string {
	if x != nil {
		return x.WhatsappCallId
	}
	return ""
}

func (x *ConnectWhatsAppCallRequest) GetSdp() *SessionDescription {
	if x != nil {
		return x.Sdp
	}
	return nil
}

type ConnectWhatsAppCallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectWhatsAppCallResponse) Reset() {
	*x = ConnectWhatsAppCallResponse{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectWhatsAppCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectWhatsAppCallResponse) ProtoMessage() {}

func (x *ConnectWhatsAppCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectWhatsAppCallResponse.ProtoReflect.Descriptor instead.
func (*ConnectWhatsAppCallResponse) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{5}
}

type AcceptWhatsAppCallRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of the business that is conencting the call
	WhatsappPhoneNumberId string `protobuf:"bytes,1,opt,name=whatsapp_phone_number_id,json=whatsappPhoneNumberId,proto3" json:"whatsapp_phone_number_id,omitempty"`
	// The API key of the business that is connecting the call
	WhatsappApiKey string `protobuf:"bytes,2,opt,name=whatsapp_api_key,json=whatsappApiKey,proto3" json:"whatsapp_api_key,omitempty"`
	// Call ID sent by Meta
	WhatsappCallId string `protobuf:"bytes,3,opt,name=whatsapp_call_id,json=whatsappCallId,proto3" json:"whatsapp_call_id,omitempty"`
	// An arbitrary string you can pass in that is useful for tracking and logging purposes.
	WhatsappBizOpaqueCallbackData string `protobuf:"bytes,4,opt,name=whatsapp_biz_opaque_callback_data,json=whatsappBizOpaqueCallbackData,proto3" json:"whatsapp_biz_opaque_callback_data,omitempty"`
	// The call accept webhook comes with SDP from Meta
	// It is the for a user initiated call
	Sdp *SessionDescription `protobuf:"bytes,5,opt,name=sdp,proto3" json:"sdp,omitempty"`
	// What LiveKit room should this participant be connected too
	RoomName string `protobuf:"bytes,6,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	// Optional agents to dispatch the call to
	Agents []*RoomAgentDispatch `protobuf:"bytes,7,rep,name=agents,proto3" json:"agents,omitempty"`
	// Optional identity of the participant in LiveKit room
	ParticipantIdentity string `protobuf:"bytes,8,opt,name=participant_identity,json=participantIdentity,proto3" json:"participant_identity,omitempty"`
	// Optional name of the participant in LiveKit room
	ParticipantName string `protobuf:"bytes,9,opt,name=participant_name,json=participantName,proto3" json:"participant_name,omitempty"`
	// Optional user-defined metadata. Will be attached to a created Participant in the room.
	ParticipantMetadata string `protobuf:"bytes,10,opt,name=participant_metadata,json=participantMetadata,proto3" json:"participant_metadata,omitempty"`
	// Optional user-defined attributes. Will be attached to a created Participant in the room.
	ParticipantAttributes map[string]string `protobuf:"bytes,11,rep,name=participant_attributes,json=participantAttributes,proto3" json:"participant_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Country where the call terminates as ISO 3166-1 alpha-2 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). This will be used by the livekit infrastructure to route calls.
	DestinationCountry string `protobuf:"bytes,12,opt,name=destination_country,json=destinationCountry,proto3" json:"destination_country,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AcceptWhatsAppCallRequest) Reset() {
	*x = AcceptWhatsAppCallRequest{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptWhatsAppCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptWhatsAppCallRequest) ProtoMessage() {}

func (x *AcceptWhatsAppCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptWhatsAppCallRequest.ProtoReflect.Descriptor instead.
func (*AcceptWhatsAppCallRequest) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{6}
}

func (x *AcceptWhatsAppCallRequest) GetWhatsappPhoneNumberId() string {
	if x != nil {
		return x.WhatsappPhoneNumberId
	}
	return ""
}

func (x *AcceptWhatsAppCallRequest) GetWhatsappApiKey() string {
	if x != nil {
		return x.WhatsappApiKey
	}
	return ""
}

func (x *AcceptWhatsAppCallRequest) GetWhatsappCallId() string {
	if x != nil {
		return x.WhatsappCallId
	}
	return ""
}

func (x *AcceptWhatsAppCallRequest) GetWhatsappBizOpaqueCallbackData() string {
	if x != nil {
		return x.WhatsappBizOpaqueCallbackData
	}
	return ""
}

func (x *AcceptWhatsAppCallRequest) GetSdp() *SessionDescription {
	if x != nil {
		return x.Sdp
	}
	return nil
}

func (x *AcceptWhatsAppCallRequest) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *AcceptWhatsAppCallRequest) GetAgents() []*RoomAgentDispatch {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *AcceptWhatsAppCallRequest) GetParticipantIdentity() string {
	if x != nil {
		return x.ParticipantIdentity
	}
	return ""
}

func (x *AcceptWhatsAppCallRequest) GetParticipantName() string {
	if x != nil {
		return x.ParticipantName
	}
	return ""
}

func (x *AcceptWhatsAppCallRequest) GetParticipantMetadata() string {
	if x != nil {
		return x.ParticipantMetadata
	}
	return ""
}

func (x *AcceptWhatsAppCallRequest) GetParticipantAttributes() map[string]string {
	if x != nil {
		return x.ParticipantAttributes
	}
	return nil
}

func (x *AcceptWhatsAppCallRequest) GetDestinationCountry() string {
	if x != nil {
		return x.DestinationCountry
	}
	return ""
}

type AcceptWhatsAppCallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptWhatsAppCallResponse) Reset() {
	*x = AcceptWhatsAppCallResponse{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptWhatsAppCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptWhatsAppCallResponse) ProtoMessage() {}

func (x *AcceptWhatsAppCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptWhatsAppCallResponse.ProtoReflect.Descriptor instead.
func (*AcceptWhatsAppCallResponse) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{7}
}

type WhatsAppCall struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list of call ids that are currently active
	WhatsappCallId string `protobuf:"bytes,1,opt,name=whatsapp_call_id,json=whatsappCallId,proto3" json:"whatsapp_call_id,omitempty"`
	// Direction of the call
	Direction     WhatsAppCallDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=livekit.WhatsAppCallDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhatsAppCall) Reset() {
	*x = WhatsAppCall{}
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhatsAppCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhatsAppCall) ProtoMessage() {}

func (x *WhatsAppCall) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_connector_whatsapp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhatsAppCall.ProtoReflect.Descriptor instead.
func (*WhatsAppCall) Descriptor() ([]byte, []int) {
	return file_livekit_connector_whatsapp_proto_rawDescGZIP(), []int{8}
}

func (x *WhatsAppCall) GetWhatsappCallId() string {
	if x != nil {
		return x.WhatsappCallId
	}
	return ""
}

func (x *WhatsAppCall) GetDirection() WhatsAppCallDirection {
	if x != nil {
		return x.Direction
	}
	return WhatsAppCallDirection_WHATSAPP_CALL_DIRECTION_INBOUND
}

var File_livekit_connector_whatsapp_proto protoreflect.FileDescriptor

const file_livekit_connector_whatsapp_proto_rawDesc = "" +
	"\n" +
	" livekit_connector_whatsapp.proto\x12\alivekit\x1a\x1clivekit_agent_dispatch.proto\x1a\x11livekit_rtc.proto\"\xd0\x05\n" +
	"\x17DialWhatsAppCallRequest\x127\n" +
	"\x18whatsapp_phone_number_id\x18\x01 \x01(\tR\x15whatsappPhoneNumberId\x127\n" +
	"\x18whatsapp_to_phone_number\x18\x02 \x01(\tR\x15whatsappToPhoneNumber\x12(\n" +
	"\x10whatsapp_api_key\x18\x03 \x01(\tR\x0ewhatsappApiKey\x12H\n" +
	"!whatsapp_biz_opaque_callback_data\x18\x04 \x01(\tR\x1dwhatsappBizOpaqueCallbackData\x12\x1b\n" +
	"\troom_name\x18\x05 \x01(\tR\broomName\x122\n" +
	"\x06agents\x18\x06 \x03(\v2\x1a.livekit.RoomAgentDispatchR\x06agents\x121\n" +
	"\x14participant_identity\x18\a \x01(\tR\x13participantIdentity\x12)\n" +
	"\x10participant_name\x18\b \x01(\tR\x0fparticipantName\x121\n" +
	"\x14participant_metadata\x18\t \x01(\tR\x13participantMetadata\x12r\n" +
	"\x16participant_attributes\x18\n" +
	" \x03(\v2;.livekit.DialWhatsAppCallRequest.ParticipantAttributesEntryR\x15participantAttributes\x12/\n" +
	"\x13destination_country\x18\v \x01(\tR\x12destinationCountry\x1aH\n" +
	"\x1aParticipantAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"D\n" +
	"\x18DialWhatsAppCallResponse\x12(\n" +
	"\x10whatsapp_call_id\x18\x01 \x01(\tR\x0ewhatsappCallId\"s\n" +
	"\x1dDisconnectWhatsAppCallRequest\x12(\n" +
	"\x10whatsapp_call_id\x18\x01 \x01(\tR\x0ewhatsappCallId\x12(\n" +
	"\x10whatsapp_api_key\x18\x02 \x01(\tR\x0ewhatsappApiKey\" \n" +
	"\x1eDisconnectWhatsAppCallResponse\"\xd8\x01\n" +
	"\x1aConnectWhatsAppCallRequest\x127\n" +
	"\x18whatsapp_phone_number_id\x18\x01 \x01(\tR\x15whatsappPhoneNumberId\x12(\n" +
	"\x10whatsapp_api_key\x18\x02 \x01(\tR\x0ewhatsappApiKey\x12(\n" +
	"\x10whatsapp_call_id\x18\x03 \x01(\tR\x0ewhatsappCallId\x12-\n" +
	"\x03sdp\x18\x04 \x01(\v2\x1b.livekit.SessionDescriptionR\x03sdp\"\x1d\n" +
	"\x1bConnectWhatsAppCallResponse\"\xf4\x05\n" +
	"\x19AcceptWhatsAppCallRequest\x127\n" +
	"\x18whatsapp_phone_number_id\x18\x01 \x01(\tR\x15whatsappPhoneNumberId\x12(\n" +
	"\x10whatsapp_api_key\x18\x02 \x01(\tR\x0ewhatsappApiKey\x12(\n" +
	"\x10whatsapp_call_id\x18\x03 \x01(\tR\x0ewhatsappCallId\x12H\n" +
	"!whatsapp_biz_opaque_callback_data\x18\x04 \x01(\tR\x1dwhatsappBizOpaqueCallbackData\x12-\n" +
	"\x03sdp\x18\x05 \x01(\v2\x1b.livekit.SessionDescriptionR\x03sdp\x12\x1b\n" +
	"\troom_name\x18\x06 \x01(\tR\broomName\x122\n" +
	"\x06agents\x18\a \x03(\v2\x1a.livekit.RoomAgentDispatchR\x06agents\x121\n" +
	"\x14participant_identity\x18\b \x01(\tR\x13participantIdentity\x12)\n" +
	"\x10participant_name\x18\t \x01(\tR\x0fparticipantName\x121\n" +
	"\x14participant_metadata\x18\n" +
	" \x01(\tR\x13participantMetadata\x12t\n" +
	"\x16participant_attributes\x18\v \x03(\v2=.livekit.AcceptWhatsAppCallRequest.ParticipantAttributesEntryR\x15participantAttributes\x12/\n" +
	"\x13destination_country\x18\f \x01(\tR\x12destinationCountry\x1aH\n" +
	"\x1aParticipantAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1c\n" +
	"\x1aAcceptWhatsAppCallResponse\"v\n" +
	"\fWhatsAppCall\x12(\n" +
	"\x10whatsapp_call_id\x18\x01 \x01(\tR\x0ewhatsappCallId\x12<\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x1e.livekit.WhatsAppCallDirectionR\tdirection*b\n" +
	"\x15WhatsAppCallDirection\x12#\n" +
	"\x1fWHATSAPP_CALL_DIRECTION_INBOUND\x10\x00\x12$\n" +
	" WHATSAPP_CALL_DIRECTION_OUTBOUND\x10\x02BFZ#github.com/livekit/protocol/livekit\xaa\x02\rLiveKit.Proto\xea\x02\x0eLiveKit::Protob\x06proto3"

var (
	file_livekit_connector_whatsapp_proto_rawDescOnce sync.Once
	file_livekit_connector_whatsapp_proto_rawDescData []byte
)

func file_livekit_connector_whatsapp_proto_rawDescGZIP() []byte {
	file_livekit_connector_whatsapp_proto_rawDescOnce.Do(func() {
		file_livekit_connector_whatsapp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_livekit_connector_whatsapp_proto_rawDesc), len(file_livekit_connector_whatsapp_proto_rawDesc)))
	})
	return file_livekit_connector_whatsapp_proto_rawDescData
}

var file_livekit_connector_whatsapp_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_livekit_connector_whatsapp_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_livekit_connector_whatsapp_proto_goTypes = []any{
	(WhatsAppCallDirection)(0),             // 0: livekit.WhatsAppCallDirection
	(*DialWhatsAppCallRequest)(nil),        // 1: livekit.DialWhatsAppCallRequest
	(*DialWhatsAppCallResponse)(nil),       // 2: livekit.DialWhatsAppCallResponse
	(*DisconnectWhatsAppCallRequest)(nil),  // 3: livekit.DisconnectWhatsAppCallRequest
	(*DisconnectWhatsAppCallResponse)(nil), // 4: livekit.DisconnectWhatsAppCallResponse
	(*ConnectWhatsAppCallRequest)(nil),     // 5: livekit.ConnectWhatsAppCallRequest
	(*ConnectWhatsAppCallResponse)(nil),    // 6: livekit.ConnectWhatsAppCallResponse
	(*AcceptWhatsAppCallRequest)(nil),      // 7: livekit.AcceptWhatsAppCallRequest
	(*AcceptWhatsAppCallResponse)(nil),     // 8: livekit.AcceptWhatsAppCallResponse
	(*WhatsAppCall)(nil),                   // 9: livekit.WhatsAppCall
	nil,                                    // 10: livekit.DialWhatsAppCallRequest.ParticipantAttributesEntry
	nil,                                    // 11: livekit.AcceptWhatsAppCallRequest.ParticipantAttributesEntry
	(*RoomAgentDispatch)(nil),              // 12: livekit.RoomAgentDispatch
	(*SessionDescription)(nil),             // 13: livekit.SessionDescription
}
var file_livekit_connector_whatsapp_proto_depIdxs = []int32{
	12, // 0: livekit.DialWhatsAppCallRequest.agents:type_name -> livekit.RoomAgentDispatch
	10, // 1: livekit.DialWhatsAppCallRequest.participant_attributes:type_name -> livekit.DialWhatsAppCallRequest.ParticipantAttributesEntry
	13, // 2: livekit.ConnectWhatsAppCallRequest.sdp:type_name -> livekit.SessionDescription
	13, // 3: livekit.AcceptWhatsAppCallRequest.sdp:type_name -> livekit.SessionDescription
	12, // 4: livekit.AcceptWhatsAppCallRequest.agents:type_name -> livekit.RoomAgentDispatch
	11, // 5: livekit.AcceptWhatsAppCallRequest.participant_attributes:type_name -> livekit.AcceptWhatsAppCallRequest.ParticipantAttributesEntry
	0,  // 6: livekit.WhatsAppCall.direction:type_name -> livekit.WhatsAppCallDirection
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_livekit_connector_whatsapp_proto_init() }
func file_livekit_connector_whatsapp_proto_init() {
	if File_livekit_connector_whatsapp_proto != nil {
		return
	}
	file_livekit_agent_dispatch_proto_init()
	file_livekit_rtc_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_livekit_connector_whatsapp_proto_rawDesc), len(file_livekit_connector_whatsapp_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_livekit_connector_whatsapp_proto_goTypes,
		DependencyIndexes: file_livekit_connector_whatsapp_proto_depIdxs,
		EnumInfos:         file_livekit_connector_whatsapp_proto_enumTypes,
		MessageInfos:      file_livekit_connector_whatsapp_proto_msgTypes,
	}.Build()
	File_livekit_connector_whatsapp_proto = out.File
	file_livekit_connector_whatsapp_proto_goTypes = nil
	file_livekit_connector_whatsapp_proto_depIdxs = nil
}
