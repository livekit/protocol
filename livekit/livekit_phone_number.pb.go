// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v6.32.0
// source: livekit_phone_number.proto

package livekit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Telephony cost type enumeration
type TelephonyCostType int32

const (
	TelephonyCostType_TELEPHONY_COST_TYPE_UNSPECIFIED    TelephonyCostType = 0 // Default value
	TelephonyCostType_TELEPHONY_COST_TYPE_NUMBER_RENTAL  TelephonyCostType = 1 // Monthly rental for the phone number
	TelephonyCostType_TELEPHONY_COST_TYPE_VOICE_INBOUND  TelephonyCostType = 2 // Inbound voice calls
	TelephonyCostType_TELEPHONY_COST_TYPE_VOICE_OUTBOUND TelephonyCostType = 3 // Outbound voice calls
	TelephonyCostType_TELEPHONY_COST_TYPE_SMS_INBOUND    TelephonyCostType = 4 // Inbound SMS
	TelephonyCostType_TELEPHONY_COST_TYPE_SMS_OUTBOUND   TelephonyCostType = 5 // Outbound SMS
)

// Enum value maps for TelephonyCostType.
var (
	TelephonyCostType_name = map[int32]string{
		0: "TELEPHONY_COST_TYPE_UNSPECIFIED",
		1: "TELEPHONY_COST_TYPE_NUMBER_RENTAL",
		2: "TELEPHONY_COST_TYPE_VOICE_INBOUND",
		3: "TELEPHONY_COST_TYPE_VOICE_OUTBOUND",
		4: "TELEPHONY_COST_TYPE_SMS_INBOUND",
		5: "TELEPHONY_COST_TYPE_SMS_OUTBOUND",
	}
	TelephonyCostType_value = map[string]int32{
		"TELEPHONY_COST_TYPE_UNSPECIFIED":    0,
		"TELEPHONY_COST_TYPE_NUMBER_RENTAL":  1,
		"TELEPHONY_COST_TYPE_VOICE_INBOUND":  2,
		"TELEPHONY_COST_TYPE_VOICE_OUTBOUND": 3,
		"TELEPHONY_COST_TYPE_SMS_INBOUND":    4,
		"TELEPHONY_COST_TYPE_SMS_OUTBOUND":   5,
	}
)

func (x TelephonyCostType) Enum() *TelephonyCostType {
	p := new(TelephonyCostType)
	*p = x
	return p
}

func (x TelephonyCostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TelephonyCostType) Descriptor() protoreflect.EnumDescriptor {
	return file_livekit_phone_number_proto_enumTypes[0].Descriptor()
}

func (TelephonyCostType) Type() protoreflect.EnumType {
	return &file_livekit_phone_number_proto_enumTypes[0]
}

func (x TelephonyCostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TelephonyCostType.Descriptor instead.
func (TelephonyCostType) EnumDescriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{0}
}

// Phone number status enumeration
type PhoneNumberStatus int32

const (
	PhoneNumberStatus_PHONE_NUMBER_STATUS_UNSPECIFIED PhoneNumberStatus = 0 // Default value
	PhoneNumberStatus_PHONE_NUMBER_STATUS_ACTIVE      PhoneNumberStatus = 1 // Number is active and ready for use
	PhoneNumberStatus_PHONE_NUMBER_STATUS_PENDING     PhoneNumberStatus = 2 // Number is being provisioned
	PhoneNumberStatus_PHONE_NUMBER_STATUS_RELEASED    PhoneNumberStatus = 3 // Number has been released
)

// Enum value maps for PhoneNumberStatus.
var (
	PhoneNumberStatus_name = map[int32]string{
		0: "PHONE_NUMBER_STATUS_UNSPECIFIED",
		1: "PHONE_NUMBER_STATUS_ACTIVE",
		2: "PHONE_NUMBER_STATUS_PENDING",
		3: "PHONE_NUMBER_STATUS_RELEASED",
	}
	PhoneNumberStatus_value = map[string]int32{
		"PHONE_NUMBER_STATUS_UNSPECIFIED": 0,
		"PHONE_NUMBER_STATUS_ACTIVE":      1,
		"PHONE_NUMBER_STATUS_PENDING":     2,
		"PHONE_NUMBER_STATUS_RELEASED":    3,
	}
)

func (x PhoneNumberStatus) Enum() *PhoneNumberStatus {
	p := new(PhoneNumberStatus)
	*p = x
	return p
}

func (x PhoneNumberStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhoneNumberStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_livekit_phone_number_proto_enumTypes[1].Descriptor()
}

func (PhoneNumberStatus) Type() protoreflect.EnumType {
	return &file_livekit_phone_number_proto_enumTypes[1]
}

func (x PhoneNumberStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhoneNumberStatus.Descriptor instead.
func (PhoneNumberStatus) EnumDescriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{1}
}

// ListPhoneNumberInventoryRequest - Request to list available phone numbers
type ListPhoneNumberInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode string           `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"` // Optional: Filter by country code (e.g., "US", "CA")
	AreaCode    string           `protobuf:"bytes,2,opt,name=area_code,json=areaCode,proto3" json:"area_code,omitempty"`          // Optional: Filter by area code (e.g., "415")
	Limit       int32            `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                               // Optional: Maximum number of results (default: 50)
	PageToken   *TokenPagination `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`       // Optional: Token for pagination (empty for first page)
}

func (x *ListPhoneNumberInventoryRequest) Reset() {
	*x = ListPhoneNumberInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhoneNumberInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhoneNumberInventoryRequest) ProtoMessage() {}

func (x *ListPhoneNumberInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhoneNumberInventoryRequest.ProtoReflect.Descriptor instead.
func (*ListPhoneNumberInventoryRequest) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{0}
}

func (x *ListPhoneNumberInventoryRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *ListPhoneNumberInventoryRequest) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *ListPhoneNumberInventoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPhoneNumberInventoryRequest) GetPageToken() *TokenPagination {
	if x != nil {
		return x.PageToken
	}
	return nil
}

// ListPhoneNumberInventoryResponse - Response containing available phone numbers
type ListPhoneNumberInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items         []*PhoneNumberInventoryItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                                        // List of available phone numbers
	NextPageToken *TokenPagination            `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for next page (empty if no more pages)
}

func (x *ListPhoneNumberInventoryResponse) Reset() {
	*x = ListPhoneNumberInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhoneNumberInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhoneNumberInventoryResponse) ProtoMessage() {}

func (x *ListPhoneNumberInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhoneNumberInventoryResponse.ProtoReflect.Descriptor instead.
func (*ListPhoneNumberInventoryResponse) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{1}
}

func (x *ListPhoneNumberInventoryResponse) GetItems() []*PhoneNumberInventoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListPhoneNumberInventoryResponse) GetNextPageToken() *TokenPagination {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

// PurchasePhoneNumberRequest - Request to purchase phone numbers
type PurchasePhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumbers []string `protobuf:"bytes,1,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"` // Phone numbers to purchase (e.g., ["+1234567890", "+1234567891"])
}

func (x *PurchasePhoneNumberRequest) Reset() {
	*x = PurchasePhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasePhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasePhoneNumberRequest) ProtoMessage() {}

func (x *PurchasePhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasePhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*PurchasePhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{2}
}

func (x *PurchasePhoneNumberRequest) GetPhoneNumbers() []string {
	if x != nil {
		return x.PhoneNumbers
	}
	return nil
}

// PurchasePhoneNumberResponse - Response containing the purchased phone numbers
type PurchasePhoneNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumbers []*PurchasedPhoneNumber `protobuf:"bytes,1,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"` // Details of the purchased phone numbers
}

func (x *PurchasePhoneNumberResponse) Reset() {
	*x = PurchasePhoneNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasePhoneNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasePhoneNumberResponse) ProtoMessage() {}

func (x *PurchasePhoneNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasePhoneNumberResponse.ProtoReflect.Descriptor instead.
func (*PurchasePhoneNumberResponse) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{3}
}

func (x *PurchasePhoneNumberResponse) GetPhoneNumbers() []*PurchasedPhoneNumber {
	if x != nil {
		return x.PhoneNumbers
	}
	return nil
}

// ListPurchasedPhoneNumbersRequest - Request to list purchased phone numbers
type ListPurchasedPhoneNumbersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int32            `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`                         // Optional: Maximum number of results (default: 50)
	PageToken *TokenPagination `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // Optional: Token for pagination (empty for first page)
}

func (x *ListPurchasedPhoneNumbersRequest) Reset() {
	*x = ListPurchasedPhoneNumbersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPurchasedPhoneNumbersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPurchasedPhoneNumbersRequest) ProtoMessage() {}

func (x *ListPurchasedPhoneNumbersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPurchasedPhoneNumbersRequest.ProtoReflect.Descriptor instead.
func (*ListPurchasedPhoneNumbersRequest) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{4}
}

func (x *ListPurchasedPhoneNumbersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPurchasedPhoneNumbersRequest) GetPageToken() *TokenPagination {
	if x != nil {
		return x.PageToken
	}
	return nil
}

// ListPurchasedPhoneNumbersResponse - Response containing purchased phone numbers
type ListPurchasedPhoneNumbersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items         []*PurchasedPhoneNumber `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                                        // List of purchased phone numbers
	NextPageToken *TokenPagination        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for next page (empty if no more pages)
	TotalCount    int32                   `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`           // Total number of purchased phone numbers
}

func (x *ListPurchasedPhoneNumbersResponse) Reset() {
	*x = ListPurchasedPhoneNumbersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPurchasedPhoneNumbersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPurchasedPhoneNumbersResponse) ProtoMessage() {}

func (x *ListPurchasedPhoneNumbersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPurchasedPhoneNumbersResponse.ProtoReflect.Descriptor instead.
func (*ListPurchasedPhoneNumbersResponse) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{5}
}

func (x *ListPurchasedPhoneNumbersResponse) GetItems() []*PurchasedPhoneNumber {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListPurchasedPhoneNumbersResponse) GetNextPageToken() *TokenPagination {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *ListPurchasedPhoneNumbersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ReleasePhoneNumberRequest - Request to release purchased phone numbers
type ReleasePhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumbers []string `protobuf:"bytes,1,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"` // Phone numbers to release (e.g., ["+1234567890", "+1234567891"])
}

func (x *ReleasePhoneNumberRequest) Reset() {
	*x = ReleasePhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasePhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePhoneNumberRequest) ProtoMessage() {}

func (x *ReleasePhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*ReleasePhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{6}
}

func (x *ReleasePhoneNumberRequest) GetPhoneNumbers() []string {
	if x != nil {
		return x.PhoneNumbers
	}
	return nil
}

// GlobalPhoneNumber represents a phone number with standardized format
type GlobalPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // unique identifier
	E164Format  string                 `protobuf:"bytes,2,opt,name=e164_format,json=e164Format,proto3" json:"e164_format,omitempty"`    // e.g., "+14155552671"
	CountryCode string                 `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"` // e.g., "US"
	AreaCode    string                 `protobuf:"bytes,4,opt,name=area_code,json=areaCode,proto3" json:"area_code,omitempty"`          // e.g., "415"
	NumberType  string                 `protobuf:"bytes,5,opt,name=number_type,json=numberType,proto3" json:"number_type,omitempty"`    // e.g., local, toll-free, national, mobile
	Locality    string                 `protobuf:"bytes,6,opt,name=locality,proto3" json:"locality,omitempty"`                          // City/locality (e.g., "San Francisco")
	Region      string                 `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`                              // State/region (e.g., "CA")
	SpamScore   float64                `protobuf:"fixed64,8,opt,name=spam_score,json=spamScore,proto3" json:"spam_score,omitempty"`     // can be used later for fraud detection
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // timestamp when created
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`      // timestamp when updated
}

func (x *GlobalPhoneNumber) Reset() {
	*x = GlobalPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalPhoneNumber) ProtoMessage() {}

func (x *GlobalPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalPhoneNumber.ProtoReflect.Descriptor instead.
func (*GlobalPhoneNumber) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{7}
}

func (x *GlobalPhoneNumber) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GlobalPhoneNumber) GetE164Format() string {
	if x != nil {
		return x.E164Format
	}
	return ""
}

func (x *GlobalPhoneNumber) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GlobalPhoneNumber) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *GlobalPhoneNumber) GetNumberType() string {
	if x != nil {
		return x.NumberType
	}
	return ""
}

func (x *GlobalPhoneNumber) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *GlobalPhoneNumber) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GlobalPhoneNumber) GetSpamScore() float64 {
	if x != nil {
		return x.SpamScore
	}
	return 0
}

func (x *GlobalPhoneNumber) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GlobalPhoneNumber) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// TelephonyCost represents the pricing structure for a specific telephony service
type TelephonyCost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource    TelephonyCostType `protobuf:"varint,1,opt,name=resource,proto3,enum=livekit.TelephonyCostType" json:"resource,omitempty"` // Type of telephony service
	Currency    string            `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`                                 // Currency code (e.g., "USD", "EUR")
	Price       float64           `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`                                     // Price for this service
	BillingUnit string            `protobuf:"bytes,4,opt,name=billing_unit,json=billingUnit,proto3" json:"billing_unit,omitempty"`        // Billing unit (e.g., "month", "minute", "message", "call")
}

func (x *TelephonyCost) Reset() {
	*x = TelephonyCost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelephonyCost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelephonyCost) ProtoMessage() {}

func (x *TelephonyCost) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelephonyCost.ProtoReflect.Descriptor instead.
func (*TelephonyCost) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{8}
}

func (x *TelephonyCost) GetResource() TelephonyCostType {
	if x != nil {
		return x.Resource
	}
	return TelephonyCostType_TELEPHONY_COST_TYPE_UNSPECIFIED
}

func (x *TelephonyCost) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TelephonyCost) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TelephonyCost) GetBillingUnit() string {
	if x != nil {
		return x.BillingUnit
	}
	return ""
}

// PhoneNumberInventoryItem - Represents an available phone number for purchase
type PhoneNumberInventoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber  *GlobalPhoneNumber `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"` // Common phone number fields
	Capabilities []string           `protobuf:"bytes,2,rep,name=capabilities,proto3" json:"capabilities,omitempty"`                  // Comma-separated capabilities (e.g., "voice,sms")
	Costs        []*TelephonyCost   `protobuf:"bytes,3,rep,name=costs,proto3" json:"costs,omitempty"`                                // Array of costs for different services
}

func (x *PhoneNumberInventoryItem) Reset() {
	*x = PhoneNumberInventoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneNumberInventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneNumberInventoryItem) ProtoMessage() {}

func (x *PhoneNumberInventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneNumberInventoryItem.ProtoReflect.Descriptor instead.
func (*PhoneNumberInventoryItem) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{9}
}

func (x *PhoneNumberInventoryItem) GetPhoneNumber() *GlobalPhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *PhoneNumberInventoryItem) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PhoneNumberInventoryItem) GetCosts() []*TelephonyCost {
	if x != nil {
		return x.Costs
	}
	return nil
}

// PurchasedPhoneNumber - Represents a phone number owned by a LiveKit project
type PurchasedPhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber     *GlobalPhoneNumber     `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`               // Common phone number fields
	Status          PhoneNumberStatus      `protobuf:"varint,2,opt,name=status,proto3,enum=livekit.PhoneNumberStatus" json:"status,omitempty"`            // Current status of the phone number
	AssignedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=assigned_at,json=assignedAt,proto3" json:"assigned_at,omitempty"`                  // Timestamp when the number was assigned
	ReleasedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=released_at,json=releasedAt,proto3" json:"released_at,omitempty"`                  // Timestamp when the number was released (if applicable)
	SipDispatchRule *SIPDispatchRuleInfo   `protobuf:"bytes,5,opt,name=sip_dispatch_rule,json=sipDispatchRule,proto3" json:"sip_dispatch_rule,omitempty"` // Optional: Associated SIP dispatch rule
}

func (x *PurchasedPhoneNumber) Reset() {
	*x = PurchasedPhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_phone_number_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasedPhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasedPhoneNumber) ProtoMessage() {}

func (x *PurchasedPhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_phone_number_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasedPhoneNumber.ProtoReflect.Descriptor instead.
func (*PurchasedPhoneNumber) Descriptor() ([]byte, []int) {
	return file_livekit_phone_number_proto_rawDescGZIP(), []int{10}
}

func (x *PurchasedPhoneNumber) GetPhoneNumber() *GlobalPhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *PurchasedPhoneNumber) GetStatus() PhoneNumberStatus {
	if x != nil {
		return x.Status
	}
	return PhoneNumberStatus_PHONE_NUMBER_STATUS_UNSPECIFIED
}

func (x *PurchasedPhoneNumber) GetAssignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AssignedAt
	}
	return nil
}

func (x *PurchasedPhoneNumber) GetReleasedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleasedAt
	}
	return nil
}

func (x *PurchasedPhoneNumber) GetSipDispatchRule() *SIPDispatchRuleInfo {
	if x != nil {
		return x.SipDispatchRule
	}
	return nil
}

var File_livekit_phone_number_proto protoreflect.FileDescriptor

var file_livekit_phone_number_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6c, 0x69,
	0x76, 0x65, 0x6b, 0x69, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6c, 0x69, 0x76, 0x65, 0x6b,
	0x69, 0x74, 0x5f, 0x73, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a,
	0x1f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x76,
	0x65, 0x6b, 0x69, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x9d, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x41, 0x0a, 0x1a, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x22, 0x61, 0x0a, 0x1b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b,
	0x69, 0x74, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x71, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbb, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x19, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xee, 0x02, 0x0a, 0x11, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x31, 0x36, 0x34, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x31, 0x36, 0x34, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61, 0x6d, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x54, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e,
	0x79, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x18, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x6f, 0x73, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69,
	0x74, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x52,
	0x05, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x14, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x3d, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x48, 0x0a, 0x11,
	0x73, 0x69, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69,
	0x74, 0x2e, 0x53, 0x49, 0x50, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x69, 0x70, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x75, 0x6c, 0x65, 0x2a, 0xf9, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x6c, 0x65, 0x70,
	0x68, 0x6f, 0x6e, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f,
	0x54, 0x45, 0x4c, 0x45, 0x50, 0x48, 0x4f, 0x4e, 0x59, 0x5f, 0x43, 0x4f, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x45, 0x4c, 0x45, 0x50, 0x48, 0x4f, 0x4e, 0x59, 0x5f, 0x43,
	0x4f, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f,
	0x52, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x45, 0x4c, 0x45,
	0x50, 0x48, 0x4f, 0x4e, 0x59, 0x5f, 0x43, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12,
	0x26, 0x0a, 0x22, 0x54, 0x45, 0x4c, 0x45, 0x50, 0x48, 0x4f, 0x4e, 0x59, 0x5f, 0x43, 0x4f, 0x53,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x4f, 0x55, 0x54,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x45, 0x4c, 0x45, 0x50,
	0x48, 0x4f, 0x4e, 0x59, 0x5f, 0x43, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x4d, 0x53, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20,
	0x54, 0x45, 0x4c, 0x45, 0x50, 0x48, 0x4f, 0x4e, 0x59, 0x5f, 0x43, 0x4f, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x4d, 0x53, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x05, 0x2a, 0x9b, 0x01, 0x0a, 0x11, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x48, 0x4f, 0x4e,
	0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a,
	0x1a, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a,
	0x1b, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x20,
	0x0a, 0x1c, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x03,
	0x32, 0xb5, 0x03, 0x0a, 0x12, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x28, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x23, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74,
	0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x6c, 0x69, 0x76,
	0x65, 0x6b, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_livekit_phone_number_proto_rawDescOnce sync.Once
	file_livekit_phone_number_proto_rawDescData = file_livekit_phone_number_proto_rawDesc
)

func file_livekit_phone_number_proto_rawDescGZIP() []byte {
	file_livekit_phone_number_proto_rawDescOnce.Do(func() {
		file_livekit_phone_number_proto_rawDescData = protoimpl.X.CompressGZIP(file_livekit_phone_number_proto_rawDescData)
	})
	return file_livekit_phone_number_proto_rawDescData
}

var file_livekit_phone_number_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_livekit_phone_number_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_livekit_phone_number_proto_goTypes = []any{
	(TelephonyCostType)(0),                    // 0: livekit.TelephonyCostType
	(PhoneNumberStatus)(0),                    // 1: livekit.PhoneNumberStatus
	(*ListPhoneNumberInventoryRequest)(nil),   // 2: livekit.ListPhoneNumberInventoryRequest
	(*ListPhoneNumberInventoryResponse)(nil),  // 3: livekit.ListPhoneNumberInventoryResponse
	(*PurchasePhoneNumberRequest)(nil),        // 4: livekit.PurchasePhoneNumberRequest
	(*PurchasePhoneNumberResponse)(nil),       // 5: livekit.PurchasePhoneNumberResponse
	(*ListPurchasedPhoneNumbersRequest)(nil),  // 6: livekit.ListPurchasedPhoneNumbersRequest
	(*ListPurchasedPhoneNumbersResponse)(nil), // 7: livekit.ListPurchasedPhoneNumbersResponse
	(*ReleasePhoneNumberRequest)(nil),         // 8: livekit.ReleasePhoneNumberRequest
	(*GlobalPhoneNumber)(nil),                 // 9: livekit.GlobalPhoneNumber
	(*TelephonyCost)(nil),                     // 10: livekit.TelephonyCost
	(*PhoneNumberInventoryItem)(nil),          // 11: livekit.PhoneNumberInventoryItem
	(*PurchasedPhoneNumber)(nil),              // 12: livekit.PurchasedPhoneNumber
	(*TokenPagination)(nil),                   // 13: livekit.TokenPagination
	(*timestamppb.Timestamp)(nil),             // 14: google.protobuf.Timestamp
	(*SIPDispatchRuleInfo)(nil),               // 15: livekit.SIPDispatchRuleInfo
	(*emptypb.Empty)(nil),                     // 16: google.protobuf.Empty
}
var file_livekit_phone_number_proto_depIdxs = []int32{
	13, // 0: livekit.ListPhoneNumberInventoryRequest.page_token:type_name -> livekit.TokenPagination
	11, // 1: livekit.ListPhoneNumberInventoryResponse.items:type_name -> livekit.PhoneNumberInventoryItem
	13, // 2: livekit.ListPhoneNumberInventoryResponse.next_page_token:type_name -> livekit.TokenPagination
	12, // 3: livekit.PurchasePhoneNumberResponse.phone_numbers:type_name -> livekit.PurchasedPhoneNumber
	13, // 4: livekit.ListPurchasedPhoneNumbersRequest.page_token:type_name -> livekit.TokenPagination
	12, // 5: livekit.ListPurchasedPhoneNumbersResponse.items:type_name -> livekit.PurchasedPhoneNumber
	13, // 6: livekit.ListPurchasedPhoneNumbersResponse.next_page_token:type_name -> livekit.TokenPagination
	14, // 7: livekit.GlobalPhoneNumber.created_at:type_name -> google.protobuf.Timestamp
	14, // 8: livekit.GlobalPhoneNumber.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 9: livekit.TelephonyCost.resource:type_name -> livekit.TelephonyCostType
	9,  // 10: livekit.PhoneNumberInventoryItem.phone_number:type_name -> livekit.GlobalPhoneNumber
	10, // 11: livekit.PhoneNumberInventoryItem.costs:type_name -> livekit.TelephonyCost
	9,  // 12: livekit.PurchasedPhoneNumber.phone_number:type_name -> livekit.GlobalPhoneNumber
	1,  // 13: livekit.PurchasedPhoneNumber.status:type_name -> livekit.PhoneNumberStatus
	14, // 14: livekit.PurchasedPhoneNumber.assigned_at:type_name -> google.protobuf.Timestamp
	14, // 15: livekit.PurchasedPhoneNumber.released_at:type_name -> google.protobuf.Timestamp
	15, // 16: livekit.PurchasedPhoneNumber.sip_dispatch_rule:type_name -> livekit.SIPDispatchRuleInfo
	2,  // 17: livekit.PhoneNumberService.ListPhoneNumberInventory:input_type -> livekit.ListPhoneNumberInventoryRequest
	4,  // 18: livekit.PhoneNumberService.PurchasePhoneNumber:input_type -> livekit.PurchasePhoneNumberRequest
	6,  // 19: livekit.PhoneNumberService.ListPurchasedPhoneNumbers:input_type -> livekit.ListPurchasedPhoneNumbersRequest
	8,  // 20: livekit.PhoneNumberService.ReleasePhoneNumber:input_type -> livekit.ReleasePhoneNumberRequest
	3,  // 21: livekit.PhoneNumberService.ListPhoneNumberInventory:output_type -> livekit.ListPhoneNumberInventoryResponse
	5,  // 22: livekit.PhoneNumberService.PurchasePhoneNumber:output_type -> livekit.PurchasePhoneNumberResponse
	7,  // 23: livekit.PhoneNumberService.ListPurchasedPhoneNumbers:output_type -> livekit.ListPurchasedPhoneNumbersResponse
	16, // 24: livekit.PhoneNumberService.ReleasePhoneNumber:output_type -> google.protobuf.Empty
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_livekit_phone_number_proto_init() }
func file_livekit_phone_number_proto_init() {
	if File_livekit_phone_number_proto != nil {
		return
	}
	file_livekit_models_proto_init()
	file_livekit_sip_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_livekit_phone_number_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListPhoneNumberInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListPhoneNumberInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PurchasePhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PurchasePhoneNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListPurchasedPhoneNumbersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListPurchasedPhoneNumbersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReleasePhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TelephonyCost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PhoneNumberInventoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_phone_number_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PurchasedPhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_livekit_phone_number_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_livekit_phone_number_proto_goTypes,
		DependencyIndexes: file_livekit_phone_number_proto_depIdxs,
		EnumInfos:         file_livekit_phone_number_proto_enumTypes,
		MessageInfos:      file_livekit_phone_number_proto_msgTypes,
	}.Build()
	File_livekit_phone_number_proto = out.File
	file_livekit_phone_number_proto_rawDesc = nil
	file_livekit_phone_number_proto_goTypes = nil
	file_livekit_phone_number_proto_depIdxs = nil
}
