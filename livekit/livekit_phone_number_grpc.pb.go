// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.23.4
// source: livekit_phone_number.proto

package livekit

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PhoneNumberService_ListPhoneNumberInventory_FullMethodName  = "/livekit.PhoneNumberService/ListPhoneNumberInventory"
	PhoneNumberService_PurchasePhoneNumber_FullMethodName       = "/livekit.PhoneNumberService/PurchasePhoneNumber"
	PhoneNumberService_ListPurchasedPhoneNumbers_FullMethodName = "/livekit.PhoneNumberService/ListPurchasedPhoneNumbers"
	PhoneNumberService_ReleasePhoneNumber_FullMethodName        = "/livekit.PhoneNumberService/ReleasePhoneNumber"
)

// PhoneNumberServiceClient is the client API for PhoneNumberService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Public Phone Number Service - External API for phone number management
type PhoneNumberServiceClient interface {
	// List available phone numbers in inventory
	ListPhoneNumberInventory(ctx context.Context, in *ListPhoneNumberInventoryRequest, opts ...grpc.CallOption) (*ListPhoneNumberInventoryResponse, error)
	// Purchase a phone number from inventory
	PurchasePhoneNumber(ctx context.Context, in *PurchasePhoneNumberRequest, opts ...grpc.CallOption) (*PurchasePhoneNumberResponse, error)
	// List purchased phone numbers for a project
	ListPurchasedPhoneNumbers(ctx context.Context, in *ListPurchasedPhoneNumbersRequest, opts ...grpc.CallOption) (*ListPurchasedPhoneNumbersResponse, error)
	// Release a purchased phone number
	ReleasePhoneNumber(ctx context.Context, in *ReleasePhoneNumberRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type phoneNumberServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPhoneNumberServiceClient(cc grpc.ClientConnInterface) PhoneNumberServiceClient {
	return &phoneNumberServiceClient{cc}
}

func (c *phoneNumberServiceClient) ListPhoneNumberInventory(ctx context.Context, in *ListPhoneNumberInventoryRequest, opts ...grpc.CallOption) (*ListPhoneNumberInventoryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListPhoneNumberInventoryResponse)
	err := c.cc.Invoke(ctx, PhoneNumberService_ListPhoneNumberInventory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneNumberServiceClient) PurchasePhoneNumber(ctx context.Context, in *PurchasePhoneNumberRequest, opts ...grpc.CallOption) (*PurchasePhoneNumberResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PurchasePhoneNumberResponse)
	err := c.cc.Invoke(ctx, PhoneNumberService_PurchasePhoneNumber_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneNumberServiceClient) ListPurchasedPhoneNumbers(ctx context.Context, in *ListPurchasedPhoneNumbersRequest, opts ...grpc.CallOption) (*ListPurchasedPhoneNumbersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListPurchasedPhoneNumbersResponse)
	err := c.cc.Invoke(ctx, PhoneNumberService_ListPurchasedPhoneNumbers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneNumberServiceClient) ReleasePhoneNumber(ctx context.Context, in *ReleasePhoneNumberRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, PhoneNumberService_ReleasePhoneNumber_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhoneNumberServiceServer is the server API for PhoneNumberService service.
// All implementations must embed UnimplementedPhoneNumberServiceServer
// for forward compatibility.
//
// Public Phone Number Service - External API for phone number management
type PhoneNumberServiceServer interface {
	// List available phone numbers in inventory
	ListPhoneNumberInventory(context.Context, *ListPhoneNumberInventoryRequest) (*ListPhoneNumberInventoryResponse, error)
	// Purchase a phone number from inventory
	PurchasePhoneNumber(context.Context, *PurchasePhoneNumberRequest) (*PurchasePhoneNumberResponse, error)
	// List purchased phone numbers for a project
	ListPurchasedPhoneNumbers(context.Context, *ListPurchasedPhoneNumbersRequest) (*ListPurchasedPhoneNumbersResponse, error)
	// Release a purchased phone number
	ReleasePhoneNumber(context.Context, *ReleasePhoneNumberRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedPhoneNumberServiceServer()
}

// UnimplementedPhoneNumberServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPhoneNumberServiceServer struct{}

func (UnimplementedPhoneNumberServiceServer) ListPhoneNumberInventory(context.Context, *ListPhoneNumberInventoryRequest) (*ListPhoneNumberInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPhoneNumberInventory not implemented")
}
func (UnimplementedPhoneNumberServiceServer) PurchasePhoneNumber(context.Context, *PurchasePhoneNumberRequest) (*PurchasePhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PurchasePhoneNumber not implemented")
}
func (UnimplementedPhoneNumberServiceServer) ListPurchasedPhoneNumbers(context.Context, *ListPurchasedPhoneNumbersRequest) (*ListPurchasedPhoneNumbersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPurchasedPhoneNumbers not implemented")
}
func (UnimplementedPhoneNumberServiceServer) ReleasePhoneNumber(context.Context, *ReleasePhoneNumberRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleasePhoneNumber not implemented")
}
func (UnimplementedPhoneNumberServiceServer) mustEmbedUnimplementedPhoneNumberServiceServer() {}
func (UnimplementedPhoneNumberServiceServer) testEmbeddedByValue()                            {}

// UnsafePhoneNumberServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PhoneNumberServiceServer will
// result in compilation errors.
type UnsafePhoneNumberServiceServer interface {
	mustEmbedUnimplementedPhoneNumberServiceServer()
}

func RegisterPhoneNumberServiceServer(s grpc.ServiceRegistrar, srv PhoneNumberServiceServer) {
	// If the following call pancis, it indicates UnimplementedPhoneNumberServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PhoneNumberService_ServiceDesc, srv)
}

func _PhoneNumberService_ListPhoneNumberInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPhoneNumberInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneNumberServiceServer).ListPhoneNumberInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhoneNumberService_ListPhoneNumberInventory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneNumberServiceServer).ListPhoneNumberInventory(ctx, req.(*ListPhoneNumberInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneNumberService_PurchasePhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurchasePhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneNumberServiceServer).PurchasePhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhoneNumberService_PurchasePhoneNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneNumberServiceServer).PurchasePhoneNumber(ctx, req.(*PurchasePhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneNumberService_ListPurchasedPhoneNumbers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPurchasedPhoneNumbersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneNumberServiceServer).ListPurchasedPhoneNumbers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhoneNumberService_ListPurchasedPhoneNumbers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneNumberServiceServer).ListPurchasedPhoneNumbers(ctx, req.(*ListPurchasedPhoneNumbersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneNumberService_ReleasePhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleasePhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneNumberServiceServer).ReleasePhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhoneNumberService_ReleasePhoneNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneNumberServiceServer).ReleasePhoneNumber(ctx, req.(*ReleasePhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PhoneNumberService_ServiceDesc is the grpc.ServiceDesc for PhoneNumberService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PhoneNumberService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "livekit.PhoneNumberService",
	HandlerType: (*PhoneNumberServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPhoneNumberInventory",
			Handler:    _PhoneNumberService_ListPhoneNumberInventory_Handler,
		},
		{
			MethodName: "PurchasePhoneNumber",
			Handler:    _PhoneNumberService_PurchasePhoneNumber_Handler,
		},
		{
			MethodName: "ListPurchasedPhoneNumbers",
			Handler:    _PhoneNumberService_ListPurchasedPhoneNumbers_Handler,
		},
		{
			MethodName: "ReleasePhoneNumber",
			Handler:    _PhoneNumberService_ReleasePhoneNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "livekit_phone_number.proto",
}
