syntax = "proto3";

package rpc;

option go_package = "github.com/livekit/livekit/pkg/service/rpc";

import "options.proto";
import "livekit_ingress.proto";
import "google/protobuf/empty.proto";

service IngressInternal {
  rpc StartIngress(StartIngressRequest) returns (livekit.IngressInfo) {
     option (psrpc.options).affinity_func = true;
  };

  rpc ListActiveIngress(ListActiveIngressRequest) returns (ListActiveIngressResponse) {
    option (psrpc.options).multi = true;
  };
}

service IngressHandler {
  rpc UpdateIngress(livekit.UpdateIngressRequest) returns (livekit.IngressState) {
    option (psrpc.options).topics = true;
  };
  rpc DeleteIngress(livekit.DeleteIngressRequest) returns (livekit.IngressState) {
    option (psrpc.options).topics = true;
  };
  rpc DeleteWHIPResource(DeleteWHIPResourceRequest) returns (google.protobuf.Empty) {
    option (psrpc.options).topics = true;
  }; 
}

message ListActiveIngressRequest {}

message ListActiveIngressResponse {
  repeated string ingress_ids = 1;
}

message DeleteWHIPResourceRequest {
  string resource_id = 1;
  string stream_key = 2;
}

message StartIngressRequest {
  livekit.IngressInfo info = 1;
  string token = 2;
  string ws_url = 3;
}
