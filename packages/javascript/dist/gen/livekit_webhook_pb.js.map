{"version":3,"sources":["../../src/gen/livekit_webhook_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file livekit_webhook.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3, protoInt64 } from \"@bufbuild/protobuf\";\nimport { ParticipantInfo, Room, TrackInfo } from \"./livekit_models_pb.js\";\nimport { EgressInfo } from \"./livekit_egress_pb.js\";\nimport { IngressInfo } from \"./livekit_ingress_pb.js\";\n\n/**\n * @generated from message livekit.WebhookEvent\n */\nexport class WebhookEvent extends Message<WebhookEvent> {\n  /**\n   * one of room_started, room_finished, participant_joined, participant_left,\n   * track_published, track_unpublished, egress_started, egress_updated, egress_ended,\n   * ingress_started, ingress_ended\n   *\n   * @generated from field: string event = 1;\n   */\n  event = \"\";\n\n  /**\n   * @generated from field: livekit.Room room = 2;\n   */\n  room?: Room;\n\n  /**\n   * set when event is participant_* or track_*\n   *\n   * @generated from field: livekit.ParticipantInfo participant = 3;\n   */\n  participant?: ParticipantInfo;\n\n  /**\n   * set when event is egress_*\n   *\n   * @generated from field: livekit.EgressInfo egress_info = 9;\n   */\n  egressInfo?: EgressInfo;\n\n  /**\n   * set when event is ingress_*\n   *\n   * @generated from field: livekit.IngressInfo ingress_info = 10;\n   */\n  ingressInfo?: IngressInfo;\n\n  /**\n   * set when event is track_*\n   *\n   * @generated from field: livekit.TrackInfo track = 8;\n   */\n  track?: TrackInfo;\n\n  /**\n   * unique event uuid\n   *\n   * @generated from field: string id = 6;\n   */\n  id = \"\";\n\n  /**\n   * timestamp in seconds\n   *\n   * @generated from field: int64 created_at = 7;\n   */\n  createdAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int32 num_dropped = 11;\n   */\n  numDropped = 0;\n\n  constructor(data?: PartialMessage<WebhookEvent>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.WebhookEvent\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"event\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room\", kind: \"message\", T: Room },\n    { no: 3, name: \"participant\", kind: \"message\", T: ParticipantInfo },\n    { no: 9, name: \"egress_info\", kind: \"message\", T: EgressInfo },\n    { no: 10, name: \"ingress_info\", kind: \"message\", T: IngressInfo },\n    { no: 8, name: \"track\", kind: \"message\", T: TrackInfo },\n    { no: 6, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"created_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 11, name: \"num_dropped\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebhookEvent {\n    return new WebhookEvent().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebhookEvent {\n    return new WebhookEvent().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebhookEvent {\n    return new WebhookEvent().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: WebhookEvent | PlainMessage<WebhookEvent> | undefined, b: WebhookEvent | PlainMessage<WebhookEvent> | undefined): boolean {\n    return proto3.util.equals(WebhookEvent, a, b);\n  }\n}\n\n"],"mappings":"AAoBA,SAAS,SAAS,QAAQ,kBAAkB;AAC5C,SAAS,iBAAiB,MAAM,iBAAiB;AACjD,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAKrB,MAAM,gBAAN,MAAM,sBAAqB,QAAsB;AAAA,EA8DtD,YAAY,MAAqC;AAC/C,UAAM;AAvDR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQ;AAwCR;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK;AAOL;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAY,WAAW;AAKvB;AAAA;AAAA;AAAA,sBAAa;AAIX,WAAO,KAAK,YAAY,MAAM,IAAI;AAAA,EACpC;AAAA,EAgBA,OAAO,WAAW,OAAmB,SAAoD;AACvF,WAAO,IAAI,cAAa,EAAE,WAAW,OAAO,OAAO;AAAA,EACrD;AAAA,EAEA,OAAO,SAAS,WAAsB,SAAkD;AACtF,WAAO,IAAI,cAAa,EAAE,SAAS,WAAW,OAAO;AAAA,EACvD;AAAA,EAEA,OAAO,eAAe,YAAoB,SAAkD;AAC1F,WAAO,IAAI,cAAa,EAAE,eAAe,YAAY,OAAO;AAAA,EAC9D;AAAA,EAEA,OAAO,OAAO,GAA0D,GAAmE;AACzI,WAAO,OAAO,KAAK,OAAO,eAAc,GAAG,CAAC;AAAA,EAC9C;AACF;AAhGa,cAmEK,UAAyB;AAnE9B,cAoEK,WAAW;AApEhB,cAqEK,SAAoB,OAAO,KAAK,aAAa,MAAM;AAAA,EACjE;AAAA,IAAE,IAAI;AAAA,IAAG,MAAM;AAAA,IAAS,MAAM;AAAA,IAAU,GAAG;AAAA;AAAA,EAA0B;AAAA,EACrE,EAAE,IAAI,GAAG,MAAM,QAAQ,MAAM,WAAW,GAAG,KAAK;AAAA,EAChD,EAAE,IAAI,GAAG,MAAM,eAAe,MAAM,WAAW,GAAG,gBAAgB;AAAA,EAClE,EAAE,IAAI,GAAG,MAAM,eAAe,MAAM,WAAW,GAAG,WAAW;AAAA,EAC7D,EAAE,IAAI,IAAI,MAAM,gBAAgB,MAAM,WAAW,GAAG,YAAY;AAAA,EAChE,EAAE,IAAI,GAAG,MAAM,SAAS,MAAM,WAAW,GAAG,UAAU;AAAA,EACtD;AAAA,IAAE,IAAI;AAAA,IAAG,MAAM;AAAA,IAAM,MAAM;AAAA,IAAU,GAAG;AAAA;AAAA,EAA0B;AAAA,EAClE;AAAA,IAAE,IAAI;AAAA,IAAG,MAAM;AAAA,IAAc,MAAM;AAAA,IAAU,GAAG;AAAA;AAAA,EAAyB;AAAA,EACzE;AAAA,IAAE,IAAI;AAAA,IAAI,MAAM;AAAA,IAAe,MAAM;AAAA,IAAU,GAAG;AAAA;AAAA,EAAyB;AAC7E,CAAC;AA/EI,IAAM,eAAN;","names":[]}