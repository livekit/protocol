{"version":3,"sources":["../../src/gen/livekit_ingress_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file livekit_ingress.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3, protoInt64 } from \"@bufbuild/protobuf\";\nimport { AudioCodec, TrackInfo, TrackSource, VideoCodec, VideoLayer } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from enum livekit.IngressInput\n */\nexport enum IngressInput {\n  /**\n   * @generated from enum value: RTMP_INPUT = 0;\n   */\n  RTMP_INPUT = 0,\n\n  /**\n   * @generated from enum value: WHIP_INPUT = 1;\n   */\n  WHIP_INPUT = 1,\n\n  /**\n   * Pull from the provided URL. Only HTTP url are supported, serving either a single media file or a HLS stream\n   *\n   * @generated from enum value: URL_INPUT = 2;\n   */\n  URL_INPUT = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(IngressInput)\nproto3.util.setEnumType(IngressInput, \"livekit.IngressInput\", [\n  { no: 0, name: \"RTMP_INPUT\" },\n  { no: 1, name: \"WHIP_INPUT\" },\n  { no: 2, name: \"URL_INPUT\" },\n]);\n\n/**\n * @generated from enum livekit.IngressAudioEncodingPreset\n */\nexport enum IngressAudioEncodingPreset {\n  /**\n   * OPUS, 2 channels, 96kbps\n   *\n   * @generated from enum value: OPUS_STEREO_96KBPS = 0;\n   */\n  OPUS_STEREO_96KBPS = 0,\n\n  /**\n   * OPUS, 1 channel, 64kbps\n   *\n   * @generated from enum value: OPUS_MONO_64KBS = 1;\n   */\n  OPUS_MONO_64KBS = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(IngressAudioEncodingPreset)\nproto3.util.setEnumType(IngressAudioEncodingPreset, \"livekit.IngressAudioEncodingPreset\", [\n  { no: 0, name: \"OPUS_STEREO_96KBPS\" },\n  { no: 1, name: \"OPUS_MONO_64KBS\" },\n]);\n\n/**\n * @generated from enum livekit.IngressVideoEncodingPreset\n */\nexport enum IngressVideoEncodingPreset {\n  /**\n   * 1280x720,  30fps, 1900kbps main layer, 3 layers total\n   *\n   * @generated from enum value: H264_720P_30FPS_3_LAYERS = 0;\n   */\n  H264_720P_30FPS_3_LAYERS = 0,\n\n  /**\n   * 1980x1080, 30fps, 3500kbps main layer, 3 layers total\n   *\n   * @generated from enum value: H264_1080P_30FPS_3_LAYERS = 1;\n   */\n  H264_1080P_30FPS_3_LAYERS = 1,\n\n  /**\n   *  960x540,  25fps, 1000kbps  main layer, 2 layers total\n   *\n   * @generated from enum value: H264_540P_25FPS_2_LAYERS = 2;\n   */\n  H264_540P_25FPS_2_LAYERS = 2,\n\n  /**\n   * 1280x720,  30fps, 1900kbps, no simulcast\n   *\n   * @generated from enum value: H264_720P_30FPS_1_LAYER = 3;\n   */\n  H264_720P_30FPS_1_LAYER = 3,\n\n  /**\n   * 1980x1080, 30fps, 3500kbps, no simulcast\n   *\n   * @generated from enum value: H264_1080P_30FPS_1_LAYER = 4;\n   */\n  H264_1080P_30FPS_1_LAYER = 4,\n\n  /**\n   * 1280x720,  30fps, 2500kbps main layer, 3 layers total, higher bitrate for high motion, harder to encode content\n   *\n   * @generated from enum value: H264_720P_30FPS_3_LAYERS_HIGH_MOTION = 5;\n   */\n  H264_720P_30FPS_3_LAYERS_HIGH_MOTION = 5,\n\n  /**\n   * 1980x1080, 30fps, 4500kbps main layer, 3 layers total, higher bitrate for high motion, harder to encode content\n   *\n   * @generated from enum value: H264_1080P_30FPS_3_LAYERS_HIGH_MOTION = 6;\n   */\n  H264_1080P_30FPS_3_LAYERS_HIGH_MOTION = 6,\n\n  /**\n   *  960x540,  25fps, 1300kbps  main layer, 2 layers total, higher bitrate for high motion, harder to encode content\n   *\n   * @generated from enum value: H264_540P_25FPS_2_LAYERS_HIGH_MOTION = 7;\n   */\n  H264_540P_25FPS_2_LAYERS_HIGH_MOTION = 7,\n\n  /**\n   * 1280x720,  30fps, 2500kbps, no simulcast, higher bitrate for high motion, harder to encode content\n   *\n   * @generated from enum value: H264_720P_30FPS_1_LAYER_HIGH_MOTION = 8;\n   */\n  H264_720P_30FPS_1_LAYER_HIGH_MOTION = 8,\n\n  /**\n   * 1980x1080, 30fps, 4500kbps, no simulcast, higher bitrate for high motion, harder to encode content\n   *\n   * @generated from enum value: H264_1080P_30FPS_1_LAYER_HIGH_MOTION = 9;\n   */\n  H264_1080P_30FPS_1_LAYER_HIGH_MOTION = 9,\n}\n// Retrieve enum metadata with: proto3.getEnumType(IngressVideoEncodingPreset)\nproto3.util.setEnumType(IngressVideoEncodingPreset, \"livekit.IngressVideoEncodingPreset\", [\n  { no: 0, name: \"H264_720P_30FPS_3_LAYERS\" },\n  { no: 1, name: \"H264_1080P_30FPS_3_LAYERS\" },\n  { no: 2, name: \"H264_540P_25FPS_2_LAYERS\" },\n  { no: 3, name: \"H264_720P_30FPS_1_LAYER\" },\n  { no: 4, name: \"H264_1080P_30FPS_1_LAYER\" },\n  { no: 5, name: \"H264_720P_30FPS_3_LAYERS_HIGH_MOTION\" },\n  { no: 6, name: \"H264_1080P_30FPS_3_LAYERS_HIGH_MOTION\" },\n  { no: 7, name: \"H264_540P_25FPS_2_LAYERS_HIGH_MOTION\" },\n  { no: 8, name: \"H264_720P_30FPS_1_LAYER_HIGH_MOTION\" },\n  { no: 9, name: \"H264_1080P_30FPS_1_LAYER_HIGH_MOTION\" },\n]);\n\n/**\n * @generated from message livekit.CreateIngressRequest\n */\nexport class CreateIngressRequest extends Message<CreateIngressRequest> {\n  /**\n   * @generated from field: livekit.IngressInput input_type = 1;\n   */\n  inputType = IngressInput.RTMP_INPUT;\n\n  /**\n   * Where to pull media from, only for URL input type\n   *\n   * @generated from field: string url = 9;\n   */\n  url = \"\";\n\n  /**\n   * User provided identifier for the ingress\n   *\n   * @generated from field: string name = 2;\n   */\n  name = \"\";\n\n  /**\n   * room to publish to\n   *\n   * @generated from field: string room_name = 3;\n   */\n  roomName = \"\";\n\n  /**\n   * publish as participant\n   *\n   * @generated from field: string participant_identity = 4;\n   */\n  participantIdentity = \"\";\n\n  /**\n   * name of publishing participant (used for display only)\n   *\n   * @generated from field: string participant_name = 5;\n   */\n  participantName = \"\";\n\n  /**\n   * metadata associated with the publishing participant\n   *\n   * @generated from field: string participant_metadata = 10;\n   */\n  participantMetadata = \"\";\n\n  /**\n   * [depreacted ] whether to pass through the incoming media without transcoding, only compatible with some input types. Use `enable_transcoding` instead.\n   *\n   * @generated from field: bool bypass_transcoding = 8 [deprecated = true];\n   * @deprecated\n   */\n  bypassTranscoding = false;\n\n  /**\n   * Whether to transcode the ingested media. Only WHIP supports disabling transcoding currently. WHIP will default to transcoding disabled. Replaces `bypass_transcoding. \n   *\n   * @generated from field: optional bool enable_transcoding = 11;\n   */\n  enableTranscoding?: boolean;\n\n  /**\n   * @generated from field: livekit.IngressAudioOptions audio = 6;\n   */\n  audio?: IngressAudioOptions;\n\n  /**\n   * @generated from field: livekit.IngressVideoOptions video = 7;\n   */\n  video?: IngressVideoOptions;\n\n  constructor(data?: PartialMessage<CreateIngressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.CreateIngressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"input_type\", kind: \"enum\", T: proto3.getEnumType(IngressInput) },\n    { no: 9, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"participant_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"participant_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"bypass_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 11, name: \"enable_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateIngressRequest {\n    return new CreateIngressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateIngressRequest {\n    return new CreateIngressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateIngressRequest {\n    return new CreateIngressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateIngressRequest | PlainMessage<CreateIngressRequest> | undefined, b: CreateIngressRequest | PlainMessage<CreateIngressRequest> | undefined): boolean {\n    return proto3.util.equals(CreateIngressRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.IngressAudioOptions\n */\nexport class IngressAudioOptions extends Message<IngressAudioOptions> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: livekit.TrackSource source = 2;\n   */\n  source = TrackSource.UNKNOWN;\n\n  /**\n   * @generated from oneof livekit.IngressAudioOptions.encoding_options\n   */\n  encodingOptions: {\n    /**\n     * @generated from field: livekit.IngressAudioEncodingPreset preset = 3;\n     */\n    value: IngressAudioEncodingPreset;\n    case: \"preset\";\n  } | {\n    /**\n     * @generated from field: livekit.IngressAudioEncodingOptions options = 4;\n     */\n    value: IngressAudioEncodingOptions;\n    case: \"options\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<IngressAudioOptions>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.IngressAudioOptions\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 3, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(IngressAudioEncodingPreset), oneof: \"encoding_options\" },\n    { no: 4, name: \"options\", kind: \"message\", T: IngressAudioEncodingOptions, oneof: \"encoding_options\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IngressAudioOptions {\n    return new IngressAudioOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IngressAudioOptions {\n    return new IngressAudioOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IngressAudioOptions {\n    return new IngressAudioOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: IngressAudioOptions | PlainMessage<IngressAudioOptions> | undefined, b: IngressAudioOptions | PlainMessage<IngressAudioOptions> | undefined): boolean {\n    return proto3.util.equals(IngressAudioOptions, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.IngressVideoOptions\n */\nexport class IngressVideoOptions extends Message<IngressVideoOptions> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: livekit.TrackSource source = 2;\n   */\n  source = TrackSource.UNKNOWN;\n\n  /**\n   * @generated from oneof livekit.IngressVideoOptions.encoding_options\n   */\n  encodingOptions: {\n    /**\n     * @generated from field: livekit.IngressVideoEncodingPreset preset = 3;\n     */\n    value: IngressVideoEncodingPreset;\n    case: \"preset\";\n  } | {\n    /**\n     * @generated from field: livekit.IngressVideoEncodingOptions options = 4;\n     */\n    value: IngressVideoEncodingOptions;\n    case: \"options\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<IngressVideoOptions>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.IngressVideoOptions\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 3, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(IngressVideoEncodingPreset), oneof: \"encoding_options\" },\n    { no: 4, name: \"options\", kind: \"message\", T: IngressVideoEncodingOptions, oneof: \"encoding_options\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IngressVideoOptions {\n    return new IngressVideoOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IngressVideoOptions {\n    return new IngressVideoOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IngressVideoOptions {\n    return new IngressVideoOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: IngressVideoOptions | PlainMessage<IngressVideoOptions> | undefined, b: IngressVideoOptions | PlainMessage<IngressVideoOptions> | undefined): boolean {\n    return proto3.util.equals(IngressVideoOptions, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.IngressAudioEncodingOptions\n */\nexport class IngressAudioEncodingOptions extends Message<IngressAudioEncodingOptions> {\n  /**\n   * desired audio codec to publish to room\n   *\n   * @generated from field: livekit.AudioCodec audio_codec = 1;\n   */\n  audioCodec = AudioCodec.DEFAULT_AC;\n\n  /**\n   * @generated from field: uint32 bitrate = 2;\n   */\n  bitrate = 0;\n\n  /**\n   * @generated from field: bool disable_dtx = 3;\n   */\n  disableDtx = false;\n\n  /**\n   * @generated from field: uint32 channels = 4;\n   */\n  channels = 0;\n\n  constructor(data?: PartialMessage<IngressAudioEncodingOptions>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.IngressAudioEncodingOptions\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"audio_codec\", kind: \"enum\", T: proto3.getEnumType(AudioCodec) },\n    { no: 2, name: \"bitrate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"disable_dtx\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"channels\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IngressAudioEncodingOptions {\n    return new IngressAudioEncodingOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IngressAudioEncodingOptions {\n    return new IngressAudioEncodingOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IngressAudioEncodingOptions {\n    return new IngressAudioEncodingOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: IngressAudioEncodingOptions | PlainMessage<IngressAudioEncodingOptions> | undefined, b: IngressAudioEncodingOptions | PlainMessage<IngressAudioEncodingOptions> | undefined): boolean {\n    return proto3.util.equals(IngressAudioEncodingOptions, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.IngressVideoEncodingOptions\n */\nexport class IngressVideoEncodingOptions extends Message<IngressVideoEncodingOptions> {\n  /**\n   * desired codec to publish to room\n   *\n   * @generated from field: livekit.VideoCodec video_codec = 1;\n   */\n  videoCodec = VideoCodec.DEFAULT_VC;\n\n  /**\n   * @generated from field: double frame_rate = 2;\n   */\n  frameRate = 0;\n\n  /**\n   * simulcast layers to publish, when empty, should usually be set to layers at 1/2 and 1/4 of the dimensions\n   *\n   * @generated from field: repeated livekit.VideoLayer layers = 3;\n   */\n  layers: VideoLayer[] = [];\n\n  constructor(data?: PartialMessage<IngressVideoEncodingOptions>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.IngressVideoEncodingOptions\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"video_codec\", kind: \"enum\", T: proto3.getEnumType(VideoCodec) },\n    { no: 2, name: \"frame_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 3, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IngressVideoEncodingOptions {\n    return new IngressVideoEncodingOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IngressVideoEncodingOptions {\n    return new IngressVideoEncodingOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IngressVideoEncodingOptions {\n    return new IngressVideoEncodingOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: IngressVideoEncodingOptions | PlainMessage<IngressVideoEncodingOptions> | undefined, b: IngressVideoEncodingOptions | PlainMessage<IngressVideoEncodingOptions> | undefined): boolean {\n    return proto3.util.equals(IngressVideoEncodingOptions, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.IngressInfo\n */\nexport class IngressInfo extends Message<IngressInfo> {\n  /**\n   * @generated from field: string ingress_id = 1;\n   */\n  ingressId = \"\";\n\n  /**\n   * @generated from field: string name = 2;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: string stream_key = 3;\n   */\n  streamKey = \"\";\n\n  /**\n   * URL to point the encoder to for push (RTMP, WHIP), or location to pull media from for pull (URL)\n   *\n   * @generated from field: string url = 4;\n   */\n  url = \"\";\n\n  /**\n   * for RTMP input, it'll be a rtmp:// URL\n   * for FILE input, it'll be a http:// URL\n   * for SRT input, it'll be a srt:// URL\n   *\n   * @generated from field: livekit.IngressInput input_type = 5;\n   */\n  inputType = IngressInput.RTMP_INPUT;\n\n  /**\n   * @generated from field: bool bypass_transcoding = 13 [deprecated = true];\n   * @deprecated\n   */\n  bypassTranscoding = false;\n\n  /**\n   * @generated from field: optional bool enable_transcoding = 15;\n   */\n  enableTranscoding?: boolean;\n\n  /**\n   * @generated from field: livekit.IngressAudioOptions audio = 6;\n   */\n  audio?: IngressAudioOptions;\n\n  /**\n   * @generated from field: livekit.IngressVideoOptions video = 7;\n   */\n  video?: IngressVideoOptions;\n\n  /**\n   * @generated from field: string room_name = 8;\n   */\n  roomName = \"\";\n\n  /**\n   * @generated from field: string participant_identity = 9;\n   */\n  participantIdentity = \"\";\n\n  /**\n   * @generated from field: string participant_name = 10;\n   */\n  participantName = \"\";\n\n  /**\n   * @generated from field: string participant_metadata = 14;\n   */\n  participantMetadata = \"\";\n\n  /**\n   * @generated from field: bool reusable = 11;\n   */\n  reusable = false;\n\n  /**\n   * Description of error/stream non compliance and debug info for publisher otherwise (received bitrate, resolution, bandwidth)\n   *\n   * @generated from field: livekit.IngressState state = 12;\n   */\n  state?: IngressState;\n\n  constructor(data?: PartialMessage<IngressInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.IngressInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"ingress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"stream_key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"input_type\", kind: \"enum\", T: proto3.getEnumType(IngressInput) },\n    { no: 13, name: \"bypass_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 15, name: \"enable_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions },\n    { no: 8, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"participant_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 14, name: \"participant_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"reusable\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 12, name: \"state\", kind: \"message\", T: IngressState },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IngressInfo {\n    return new IngressInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IngressInfo {\n    return new IngressInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IngressInfo {\n    return new IngressInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: IngressInfo | PlainMessage<IngressInfo> | undefined, b: IngressInfo | PlainMessage<IngressInfo> | undefined): boolean {\n    return proto3.util.equals(IngressInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.IngressState\n */\nexport class IngressState extends Message<IngressState> {\n  /**\n   * @generated from field: livekit.IngressState.Status status = 1;\n   */\n  status = IngressState_Status.ENDPOINT_INACTIVE;\n\n  /**\n   * Error/non compliance description if any\n   *\n   * @generated from field: string error = 2;\n   */\n  error = \"\";\n\n  /**\n   * @generated from field: livekit.InputVideoState video = 3;\n   */\n  video?: InputVideoState;\n\n  /**\n   * @generated from field: livekit.InputAudioState audio = 4;\n   */\n  audio?: InputAudioState;\n\n  /**\n   * ID of the current/previous room published to\n   *\n   * @generated from field: string room_id = 5;\n   */\n  roomId = \"\";\n\n  /**\n   * @generated from field: int64 started_at = 7;\n   */\n  startedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 ended_at = 8;\n   */\n  endedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 updated_at = 10;\n   */\n  updatedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: string resource_id = 9;\n   */\n  resourceId = \"\";\n\n  /**\n   * @generated from field: repeated livekit.TrackInfo tracks = 6;\n   */\n  tracks: TrackInfo[] = [];\n\n  constructor(data?: PartialMessage<IngressState>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.IngressState\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"status\", kind: \"enum\", T: proto3.getEnumType(IngressState_Status) },\n    { no: 2, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"video\", kind: \"message\", T: InputVideoState },\n    { no: 4, name: \"audio\", kind: \"message\", T: InputAudioState },\n    { no: 5, name: \"room_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 8, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 10, name: \"updated_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 9, name: \"resource_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"tracks\", kind: \"message\", T: TrackInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IngressState {\n    return new IngressState().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IngressState {\n    return new IngressState().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IngressState {\n    return new IngressState().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: IngressState | PlainMessage<IngressState> | undefined, b: IngressState | PlainMessage<IngressState> | undefined): boolean {\n    return proto3.util.equals(IngressState, a, b);\n  }\n}\n\n/**\n * @generated from enum livekit.IngressState.Status\n */\nexport enum IngressState_Status {\n  /**\n   * @generated from enum value: ENDPOINT_INACTIVE = 0;\n   */\n  ENDPOINT_INACTIVE = 0,\n\n  /**\n   * @generated from enum value: ENDPOINT_BUFFERING = 1;\n   */\n  ENDPOINT_BUFFERING = 1,\n\n  /**\n   * @generated from enum value: ENDPOINT_PUBLISHING = 2;\n   */\n  ENDPOINT_PUBLISHING = 2,\n\n  /**\n   * @generated from enum value: ENDPOINT_ERROR = 3;\n   */\n  ENDPOINT_ERROR = 3,\n\n  /**\n   * @generated from enum value: ENDPOINT_COMPLETE = 4;\n   */\n  ENDPOINT_COMPLETE = 4,\n}\n// Retrieve enum metadata with: proto3.getEnumType(IngressState_Status)\nproto3.util.setEnumType(IngressState_Status, \"livekit.IngressState.Status\", [\n  { no: 0, name: \"ENDPOINT_INACTIVE\" },\n  { no: 1, name: \"ENDPOINT_BUFFERING\" },\n  { no: 2, name: \"ENDPOINT_PUBLISHING\" },\n  { no: 3, name: \"ENDPOINT_ERROR\" },\n  { no: 4, name: \"ENDPOINT_COMPLETE\" },\n]);\n\n/**\n * @generated from message livekit.InputVideoState\n */\nexport class InputVideoState extends Message<InputVideoState> {\n  /**\n   * @generated from field: string mime_type = 1;\n   */\n  mimeType = \"\";\n\n  /**\n   * @generated from field: uint32 average_bitrate = 2;\n   */\n  averageBitrate = 0;\n\n  /**\n   * @generated from field: uint32 width = 3;\n   */\n  width = 0;\n\n  /**\n   * @generated from field: uint32 height = 4;\n   */\n  height = 0;\n\n  /**\n   * @generated from field: double framerate = 5;\n   */\n  framerate = 0;\n\n  constructor(data?: PartialMessage<InputVideoState>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.InputVideoState\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"average_bitrate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"framerate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InputVideoState {\n    return new InputVideoState().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InputVideoState {\n    return new InputVideoState().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InputVideoState {\n    return new InputVideoState().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: InputVideoState | PlainMessage<InputVideoState> | undefined, b: InputVideoState | PlainMessage<InputVideoState> | undefined): boolean {\n    return proto3.util.equals(InputVideoState, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.InputAudioState\n */\nexport class InputAudioState extends Message<InputAudioState> {\n  /**\n   * @generated from field: string mime_type = 1;\n   */\n  mimeType = \"\";\n\n  /**\n   * @generated from field: uint32 average_bitrate = 2;\n   */\n  averageBitrate = 0;\n\n  /**\n   * @generated from field: uint32 channels = 3;\n   */\n  channels = 0;\n\n  /**\n   * @generated from field: uint32 sample_rate = 4;\n   */\n  sampleRate = 0;\n\n  constructor(data?: PartialMessage<InputAudioState>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.InputAudioState\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"average_bitrate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"channels\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"sample_rate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InputAudioState {\n    return new InputAudioState().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InputAudioState {\n    return new InputAudioState().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InputAudioState {\n    return new InputAudioState().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: InputAudioState | PlainMessage<InputAudioState> | undefined, b: InputAudioState | PlainMessage<InputAudioState> | undefined): boolean {\n    return proto3.util.equals(InputAudioState, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateIngressRequest\n */\nexport class UpdateIngressRequest extends Message<UpdateIngressRequest> {\n  /**\n   * @generated from field: string ingress_id = 1;\n   */\n  ingressId = \"\";\n\n  /**\n   * @generated from field: string name = 2;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: string room_name = 3;\n   */\n  roomName = \"\";\n\n  /**\n   * @generated from field: string participant_identity = 4;\n   */\n  participantIdentity = \"\";\n\n  /**\n   * @generated from field: string participant_name = 5;\n   */\n  participantName = \"\";\n\n  /**\n   * @generated from field: string participant_metadata = 9;\n   */\n  participantMetadata = \"\";\n\n  /**\n   * @generated from field: optional bool bypass_transcoding = 8 [deprecated = true];\n   * @deprecated\n   */\n  bypassTranscoding?: boolean;\n\n  /**\n   * @generated from field: optional bool enable_transcoding = 10;\n   */\n  enableTranscoding?: boolean;\n\n  /**\n   * @generated from field: livekit.IngressAudioOptions audio = 6;\n   */\n  audio?: IngressAudioOptions;\n\n  /**\n   * @generated from field: livekit.IngressVideoOptions video = 7;\n   */\n  video?: IngressVideoOptions;\n\n  constructor(data?: PartialMessage<UpdateIngressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateIngressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"ingress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"participant_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"participant_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"bypass_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 10, name: \"enable_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateIngressRequest {\n    return new UpdateIngressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateIngressRequest {\n    return new UpdateIngressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateIngressRequest {\n    return new UpdateIngressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateIngressRequest | PlainMessage<UpdateIngressRequest> | undefined, b: UpdateIngressRequest | PlainMessage<UpdateIngressRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateIngressRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListIngressRequest\n */\nexport class ListIngressRequest extends Message<ListIngressRequest> {\n  /**\n   * when blank, lists all ingress endpoints\n   *\n   * (optional, filter by room name)\n   *\n   * @generated from field: string room_name = 1;\n   */\n  roomName = \"\";\n\n  /**\n   * (optional, filter by ingress ID)\n   *\n   * @generated from field: string ingress_id = 2;\n   */\n  ingressId = \"\";\n\n  constructor(data?: PartialMessage<ListIngressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListIngressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"ingress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIngressRequest {\n    return new ListIngressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIngressRequest {\n    return new ListIngressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIngressRequest {\n    return new ListIngressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListIngressRequest | PlainMessage<ListIngressRequest> | undefined, b: ListIngressRequest | PlainMessage<ListIngressRequest> | undefined): boolean {\n    return proto3.util.equals(ListIngressRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListIngressResponse\n */\nexport class ListIngressResponse extends Message<ListIngressResponse> {\n  /**\n   * @generated from field: repeated livekit.IngressInfo items = 1;\n   */\n  items: IngressInfo[] = [];\n\n  constructor(data?: PartialMessage<ListIngressResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListIngressResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"items\", kind: \"message\", T: IngressInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListIngressResponse {\n    return new ListIngressResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListIngressResponse {\n    return new ListIngressResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListIngressResponse {\n    return new ListIngressResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListIngressResponse | PlainMessage<ListIngressResponse> | undefined, b: ListIngressResponse | PlainMessage<ListIngressResponse> | undefined): boolean {\n    return proto3.util.equals(ListIngressResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.DeleteIngressRequest\n */\nexport class DeleteIngressRequest extends Message<DeleteIngressRequest> {\n  /**\n   * @generated from field: string ingress_id = 1;\n   */\n  ingressId = \"\";\n\n  constructor(data?: PartialMessage<DeleteIngressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.DeleteIngressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"ingress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteIngressRequest {\n    return new DeleteIngressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteIngressRequest {\n    return new DeleteIngressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteIngressRequest {\n    return new DeleteIngressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteIngressRequest | PlainMessage<DeleteIngressRequest> | undefined, b: DeleteIngressRequest | PlainMessage<DeleteIngressRequest> | undefined): boolean {\n    return proto3.util.equals(DeleteIngressRequest, a, b);\n  }\n}\n\n"],"mappings":"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","names":["IngressInput","IngressAudioEncodingPreset","IngressVideoEncodingPreset","IngressState_Status"]}