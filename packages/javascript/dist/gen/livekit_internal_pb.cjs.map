{"version":3,"sources":["../../src/gen/livekit_internal_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file livekit_internal.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3, protoInt64 } from \"@bufbuild/protobuf\";\nimport { ClientInfo, PlayoutDelay, ReconnectReason } from \"./livekit_models_pb.js\";\nimport { CreateRoomRequest } from \"./livekit_room_pb.js\";\nimport { AutoParticipantEgress, AutoTrackEgress } from \"./livekit_egress_pb.js\";\nimport { RoomAgentDispatch } from \"./livekit_agent_dispatch_pb.js\";\n\n/**\n * @generated from enum livekit.NodeType\n */\nexport enum NodeType {\n  /**\n   * @generated from enum value: SERVER = 0;\n   */\n  SERVER = 0,\n\n  /**\n   * @generated from enum value: CONTROLLER = 1;\n   */\n  CONTROLLER = 1,\n\n  /**\n   * @generated from enum value: MEDIA = 2;\n   */\n  MEDIA = 2,\n\n  /**\n   * @generated from enum value: TURN = 4;\n   */\n  TURN = 4,\n\n  /**\n   * @generated from enum value: SWEEPER = 5;\n   */\n  SWEEPER = 5,\n\n  /**\n   * @generated from enum value: DIRECTOR = 6;\n   */\n  DIRECTOR = 6,\n}\n// Retrieve enum metadata with: proto3.getEnumType(NodeType)\nproto3.util.setEnumType(NodeType, \"livekit.NodeType\", [\n  { no: 0, name: \"SERVER\" },\n  { no: 1, name: \"CONTROLLER\" },\n  { no: 2, name: \"MEDIA\" },\n  { no: 4, name: \"TURN\" },\n  { no: 5, name: \"SWEEPER\" },\n  { no: 6, name: \"DIRECTOR\" },\n]);\n\n/**\n * @generated from enum livekit.NodeState\n */\nexport enum NodeState {\n  /**\n   * @generated from enum value: STARTING_UP = 0;\n   */\n  STARTING_UP = 0,\n\n  /**\n   * @generated from enum value: SERVING = 1;\n   */\n  SERVING = 1,\n\n  /**\n   * @generated from enum value: SHUTTING_DOWN = 2;\n   */\n  SHUTTING_DOWN = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(NodeState)\nproto3.util.setEnumType(NodeState, \"livekit.NodeState\", [\n  { no: 0, name: \"STARTING_UP\" },\n  { no: 1, name: \"SERVING\" },\n  { no: 2, name: \"SHUTTING_DOWN\" },\n]);\n\n/**\n * @generated from enum livekit.ICECandidateType\n */\nexport enum ICECandidateType {\n  /**\n   * @generated from enum value: ICT_NONE = 0;\n   */\n  ICT_NONE = 0,\n\n  /**\n   * @generated from enum value: ICT_TCP = 1;\n   */\n  ICT_TCP = 1,\n\n  /**\n   * @generated from enum value: ICT_TLS = 2;\n   */\n  ICT_TLS = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ICECandidateType)\nproto3.util.setEnumType(ICECandidateType, \"livekit.ICECandidateType\", [\n  { no: 0, name: \"ICT_NONE\" },\n  { no: 1, name: \"ICT_TCP\" },\n  { no: 2, name: \"ICT_TLS\" },\n]);\n\n/**\n * @generated from message livekit.Node\n */\nexport class Node extends Message<Node> {\n  /**\n   * @generated from field: string id = 1;\n   */\n  id = \"\";\n\n  /**\n   * @generated from field: string ip = 2;\n   */\n  ip = \"\";\n\n  /**\n   * @generated from field: uint32 num_cpus = 3;\n   */\n  numCpus = 0;\n\n  /**\n   * @generated from field: livekit.NodeStats stats = 4;\n   */\n  stats?: NodeStats;\n\n  /**\n   * @generated from field: livekit.NodeType type = 5;\n   */\n  type = NodeType.SERVER;\n\n  /**\n   * @generated from field: livekit.NodeState state = 6;\n   */\n  state = NodeState.STARTING_UP;\n\n  /**\n   * @generated from field: string region = 7;\n   */\n  region = \"\";\n\n  constructor(data?: PartialMessage<Node>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.Node\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"ip\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"num_cpus\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"stats\", kind: \"message\", T: NodeStats },\n    { no: 5, name: \"type\", kind: \"enum\", T: proto3.getEnumType(NodeType) },\n    { no: 6, name: \"state\", kind: \"enum\", T: proto3.getEnumType(NodeState) },\n    { no: 7, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Node {\n    return new Node().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Node {\n    return new Node().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Node {\n    return new Node().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Node | PlainMessage<Node> | undefined, b: Node | PlainMessage<Node> | undefined): boolean {\n    return proto3.util.equals(Node, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.NodeStats\n */\nexport class NodeStats extends Message<NodeStats> {\n  /**\n   * when server was started\n   *\n   * @generated from field: int64 started_at = 1;\n   */\n  startedAt = protoInt64.zero;\n\n  /**\n   * when server last reported its status\n   *\n   * @generated from field: int64 updated_at = 2;\n   */\n  updatedAt = protoInt64.zero;\n\n  /**\n   * room\n   *\n   * @generated from field: int32 num_rooms = 3;\n   */\n  numRooms = 0;\n\n  /**\n   * @generated from field: int32 num_clients = 4;\n   */\n  numClients = 0;\n\n  /**\n   * @generated from field: int32 num_tracks_in = 5;\n   */\n  numTracksIn = 0;\n\n  /**\n   * @generated from field: int32 num_tracks_out = 6;\n   */\n  numTracksOut = 0;\n\n  /**\n   * @generated from field: int32 num_track_publish_attempts = 36;\n   */\n  numTrackPublishAttempts = 0;\n\n  /**\n   * @generated from field: float track_publish_attempts_per_sec = 37;\n   */\n  trackPublishAttemptsPerSec = 0;\n\n  /**\n   * @generated from field: int32 num_track_publish_success = 38;\n   */\n  numTrackPublishSuccess = 0;\n\n  /**\n   * @generated from field: float track_publish_success_per_sec = 39;\n   */\n  trackPublishSuccessPerSec = 0;\n\n  /**\n   * @generated from field: int32 num_track_subscribe_attempts = 40;\n   */\n  numTrackSubscribeAttempts = 0;\n\n  /**\n   * @generated from field: float track_subscribe_attempts_per_sec = 41;\n   */\n  trackSubscribeAttemptsPerSec = 0;\n\n  /**\n   * @generated from field: int32 num_track_subscribe_success = 42;\n   */\n  numTrackSubscribeSuccess = 0;\n\n  /**\n   * @generated from field: float track_subscribe_success_per_sec = 43;\n   */\n  trackSubscribeSuccessPerSec = 0;\n\n  /**\n   * packet\n   *\n   * @generated from field: uint64 bytes_in = 7;\n   */\n  bytesIn = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 bytes_out = 8;\n   */\n  bytesOut = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 packets_in = 9;\n   */\n  packetsIn = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 packets_out = 10;\n   */\n  packetsOut = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 nack_total = 11;\n   */\n  nackTotal = protoInt64.zero;\n\n  /**\n   * @generated from field: float bytes_in_per_sec = 12;\n   */\n  bytesInPerSec = 0;\n\n  /**\n   * @generated from field: float bytes_out_per_sec = 13;\n   */\n  bytesOutPerSec = 0;\n\n  /**\n   * @generated from field: float packets_in_per_sec = 14;\n   */\n  packetsInPerSec = 0;\n\n  /**\n   * @generated from field: float packets_out_per_sec = 15;\n   */\n  packetsOutPerSec = 0;\n\n  /**\n   * @generated from field: float nack_per_sec = 16;\n   */\n  nackPerSec = 0;\n\n  /**\n   * system\n   *\n   * @generated from field: uint32 num_cpus = 17;\n   */\n  numCpus = 0;\n\n  /**\n   * @generated from field: float load_avg_last1min = 18;\n   */\n  loadAvgLast1min = 0;\n\n  /**\n   * @generated from field: float load_avg_last5min = 19;\n   */\n  loadAvgLast5min = 0;\n\n  /**\n   * @generated from field: float load_avg_last15min = 20;\n   */\n  loadAvgLast15min = 0;\n\n  /**\n   * @generated from field: float cpu_load = 21;\n   */\n  cpuLoad = 0;\n\n  /**\n   * deprecated\n   *\n   * @generated from field: float memory_load = 33;\n   */\n  memoryLoad = 0;\n\n  /**\n   * @generated from field: uint64 memory_total = 34;\n   */\n  memoryTotal = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 memory_used = 35;\n   */\n  memoryUsed = protoInt64.zero;\n\n  /**\n   * @generated from field: uint32 sys_packets_out = 28;\n   */\n  sysPacketsOut = 0;\n\n  /**\n   * @generated from field: uint32 sys_packets_dropped = 29;\n   */\n  sysPacketsDropped = 0;\n\n  /**\n   * @generated from field: float sys_packets_out_per_sec = 30;\n   */\n  sysPacketsOutPerSec = 0;\n\n  /**\n   * @generated from field: float sys_packets_dropped_per_sec = 31;\n   */\n  sysPacketsDroppedPerSec = 0;\n\n  /**\n   * @generated from field: float sys_packets_dropped_pct_per_sec = 32;\n   */\n  sysPacketsDroppedPctPerSec = 0;\n\n  /**\n   * retransmissions\n   *\n   * @generated from field: uint64 retransmit_bytes_out = 22;\n   */\n  retransmitBytesOut = protoInt64.zero;\n\n  /**\n   * @generated from field: uint64 retransmit_packets_out = 23;\n   */\n  retransmitPacketsOut = protoInt64.zero;\n\n  /**\n   * @generated from field: float retransmit_bytes_out_per_sec = 24;\n   */\n  retransmitBytesOutPerSec = 0;\n\n  /**\n   * @generated from field: float retransmit_packets_out_per_sec = 25;\n   */\n  retransmitPacketsOutPerSec = 0;\n\n  /**\n   * participant joins\n   *\n   * @generated from field: uint64 participant_signal_connected = 26;\n   */\n  participantSignalConnected = protoInt64.zero;\n\n  /**\n   * @generated from field: float participant_signal_connected_per_sec = 27;\n   */\n  participantSignalConnectedPerSec = 0;\n\n  /**\n   * @generated from field: uint64 participant_rtc_connected = 44;\n   */\n  participantRtcConnected = protoInt64.zero;\n\n  /**\n   * @generated from field: float participant_rtc_connected_per_sec = 45;\n   */\n  participantRtcConnectedPerSec = 0;\n\n  /**\n   * @generated from field: uint64 participant_rtc_init = 46;\n   */\n  participantRtcInit = protoInt64.zero;\n\n  /**\n   * @generated from field: float participant_rtc_init_per_sec = 47;\n   */\n  participantRtcInitPerSec = 0;\n\n  /**\n   * forward metrics\n   *\n   * @generated from field: uint32 forward_latency = 48;\n   */\n  forwardLatency = 0;\n\n  /**\n   * @generated from field: uint32 forward_jitter = 49;\n   */\n  forwardJitter = 0;\n\n  constructor(data?: PartialMessage<NodeStats>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.NodeStats\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"updated_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"num_rooms\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"num_clients\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 5, name: \"num_tracks_in\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 6, name: \"num_tracks_out\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 36, name: \"num_track_publish_attempts\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 37, name: \"track_publish_attempts_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 38, name: \"num_track_publish_success\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 39, name: \"track_publish_success_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 40, name: \"num_track_subscribe_attempts\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 41, name: \"track_subscribe_attempts_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 42, name: \"num_track_subscribe_success\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 43, name: \"track_subscribe_success_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 7, name: \"bytes_in\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 8, name: \"bytes_out\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 9, name: \"packets_in\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 10, name: \"packets_out\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 11, name: \"nack_total\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 12, name: \"bytes_in_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 13, name: \"bytes_out_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 14, name: \"packets_in_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 15, name: \"packets_out_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 16, name: \"nack_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 17, name: \"num_cpus\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 18, name: \"load_avg_last1min\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 19, name: \"load_avg_last5min\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 20, name: \"load_avg_last15min\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 21, name: \"cpu_load\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 33, name: \"memory_load\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 34, name: \"memory_total\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 35, name: \"memory_used\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 28, name: \"sys_packets_out\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 29, name: \"sys_packets_dropped\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 30, name: \"sys_packets_out_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 31, name: \"sys_packets_dropped_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 32, name: \"sys_packets_dropped_pct_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 22, name: \"retransmit_bytes_out\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 23, name: \"retransmit_packets_out\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 24, name: \"retransmit_bytes_out_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 25, name: \"retransmit_packets_out_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 26, name: \"participant_signal_connected\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 27, name: \"participant_signal_connected_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 44, name: \"participant_rtc_connected\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 45, name: \"participant_rtc_connected_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 46, name: \"participant_rtc_init\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 47, name: \"participant_rtc_init_per_sec\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 48, name: \"forward_latency\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 49, name: \"forward_jitter\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NodeStats {\n    return new NodeStats().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NodeStats {\n    return new NodeStats().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NodeStats {\n    return new NodeStats().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: NodeStats | PlainMessage<NodeStats> | undefined, b: NodeStats | PlainMessage<NodeStats> | undefined): boolean {\n    return proto3.util.equals(NodeStats, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.StartSession\n */\nexport class StartSession extends Message<StartSession> {\n  /**\n   * @generated from field: string room_name = 1;\n   */\n  roomName = \"\";\n\n  /**\n   * @generated from field: string identity = 2;\n   */\n  identity = \"\";\n\n  /**\n   * @generated from field: string connection_id = 3;\n   */\n  connectionId = \"\";\n\n  /**\n   * if a client is reconnecting (i.e. resume instead of restart)\n   *\n   * @generated from field: bool reconnect = 4;\n   */\n  reconnect = false;\n\n  /**\n   * @generated from field: bool auto_subscribe = 9;\n   */\n  autoSubscribe = false;\n\n  /**\n   * @generated from field: bool hidden = 10;\n   */\n  hidden = false;\n\n  /**\n   * @generated from field: livekit.ClientInfo client = 11;\n   */\n  client?: ClientInfo;\n\n  /**\n   * @generated from field: bool recorder = 12;\n   */\n  recorder = false;\n\n  /**\n   * @generated from field: string name = 13;\n   */\n  name = \"\";\n\n  /**\n   * A user's ClaimGrants serialized in JSON\n   *\n   * @generated from field: string grants_json = 14;\n   */\n  grantsJson = \"\";\n\n  /**\n   * @generated from field: bool adaptive_stream = 15;\n   */\n  adaptiveStream = false;\n\n  /**\n   * if reconnect, client will set current sid\n   *\n   * @generated from field: string participant_id = 16;\n   */\n  participantId = \"\";\n\n  /**\n   * @generated from field: livekit.ReconnectReason reconnect_reason = 17;\n   */\n  reconnectReason = ReconnectReason.RR_UNKNOWN;\n\n  /**\n   * @generated from field: optional bool subscriber_allow_pause = 18;\n   */\n  subscriberAllowPause?: boolean;\n\n  /**\n   * @generated from field: bool disable_ice_lite = 19;\n   */\n  disableIceLite = false;\n\n  /**\n   * @generated from field: livekit.CreateRoomRequest create_room = 20;\n   */\n  createRoom?: CreateRoomRequest;\n\n  constructor(data?: PartialMessage<StartSession>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.StartSession\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"connection_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"reconnect\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 9, name: \"auto_subscribe\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 10, name: \"hidden\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 11, name: \"client\", kind: \"message\", T: ClientInfo },\n    { no: 12, name: \"recorder\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 13, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 14, name: \"grants_json\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 15, name: \"adaptive_stream\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 16, name: \"participant_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 17, name: \"reconnect_reason\", kind: \"enum\", T: proto3.getEnumType(ReconnectReason) },\n    { no: 18, name: \"subscriber_allow_pause\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 19, name: \"disable_ice_lite\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 20, name: \"create_room\", kind: \"message\", T: CreateRoomRequest },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartSession {\n    return new StartSession().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartSession {\n    return new StartSession().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartSession {\n    return new StartSession().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StartSession | PlainMessage<StartSession> | undefined, b: StartSession | PlainMessage<StartSession> | undefined): boolean {\n    return proto3.util.equals(StartSession, a, b);\n  }\n}\n\n/**\n * room info that should not be returned to clients\n *\n * @generated from message livekit.RoomInternal\n */\nexport class RoomInternal extends Message<RoomInternal> {\n  /**\n   * @generated from field: livekit.AutoTrackEgress track_egress = 1;\n   */\n  trackEgress?: AutoTrackEgress;\n\n  /**\n   * @generated from field: livekit.AutoParticipantEgress participant_egress = 2;\n   */\n  participantEgress?: AutoParticipantEgress;\n\n  /**\n   * @generated from field: livekit.PlayoutDelay playout_delay = 3;\n   */\n  playoutDelay?: PlayoutDelay;\n\n  /**\n   * @generated from field: repeated livekit.RoomAgentDispatch agent_dispatches = 5;\n   */\n  agentDispatches: RoomAgentDispatch[] = [];\n\n  /**\n   * @generated from field: bool sync_streams = 4;\n   */\n  syncStreams = false;\n\n  /**\n   * @generated from field: bool replay_enabled = 6;\n   */\n  replayEnabled = false;\n\n  constructor(data?: PartialMessage<RoomInternal>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RoomInternal\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"track_egress\", kind: \"message\", T: AutoTrackEgress },\n    { no: 2, name: \"participant_egress\", kind: \"message\", T: AutoParticipantEgress },\n    { no: 3, name: \"playout_delay\", kind: \"message\", T: PlayoutDelay },\n    { no: 5, name: \"agent_dispatches\", kind: \"message\", T: RoomAgentDispatch, repeated: true },\n    { no: 4, name: \"sync_streams\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"replay_enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomInternal {\n    return new RoomInternal().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomInternal {\n    return new RoomInternal().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomInternal {\n    return new RoomInternal().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RoomInternal | PlainMessage<RoomInternal> | undefined, b: RoomInternal | PlainMessage<RoomInternal> | undefined): boolean {\n    return proto3.util.equals(RoomInternal, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ICEConfig\n */\nexport class ICEConfig extends Message<ICEConfig> {\n  /**\n   * @generated from field: livekit.ICECandidateType preference_subscriber = 1;\n   */\n  preferenceSubscriber = ICECandidateType.ICT_NONE;\n\n  /**\n   * @generated from field: livekit.ICECandidateType preference_publisher = 2;\n   */\n  preferencePublisher = ICECandidateType.ICT_NONE;\n\n  constructor(data?: PartialMessage<ICEConfig>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ICEConfig\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"preference_subscriber\", kind: \"enum\", T: proto3.getEnumType(ICECandidateType) },\n    { no: 2, name: \"preference_publisher\", kind: \"enum\", T: proto3.getEnumType(ICECandidateType) },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ICEConfig {\n    return new ICEConfig().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ICEConfig {\n    return new ICEConfig().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ICEConfig {\n    return new ICEConfig().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ICEConfig | PlainMessage<ICEConfig> | undefined, b: ICEConfig | PlainMessage<ICEConfig> | undefined): boolean {\n    return proto3.util.equals(ICEConfig, a, b);\n  }\n}\n\n"],"mappings":"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","names":["NodeType","NodeState","ICECandidateType"]}