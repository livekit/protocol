{"version":3,"sources":["../../src/gen/livekit_room_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file livekit_room.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\nimport { RoomAgentDispatch } from \"./livekit_agent_dispatch_pb.js\";\nimport { AutoParticipantEgress, AutoTrackEgress, RoomCompositeEgressRequest } from \"./livekit_egress_pb.js\";\nimport { DataPacket_Kind, ParticipantInfo, ParticipantPermission, ParticipantTracks, Room, TrackInfo } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from message livekit.CreateRoomRequest\n */\nexport class CreateRoomRequest extends Message<CreateRoomRequest> {\n  /**\n   * name of the room\n   *\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * configuration to use for this room parameters. Setting parameters below override the config defaults.\n   *\n   * @generated from field: string room_preset = 12;\n   */\n  roomPreset = \"\";\n\n  /**\n   * number of seconds to keep the room open if no one joins\n   *\n   * @generated from field: uint32 empty_timeout = 2;\n   */\n  emptyTimeout = 0;\n\n  /**\n   * number of seconds to keep the room open after everyone leaves\n   *\n   * @generated from field: uint32 departure_timeout = 10;\n   */\n  departureTimeout = 0;\n\n  /**\n   * limit number of participants that can be in a room\n   *\n   * @generated from field: uint32 max_participants = 3;\n   */\n  maxParticipants = 0;\n\n  /**\n   * override the node room is allocated to, for debugging\n   *\n   * @generated from field: string node_id = 4;\n   */\n  nodeId = \"\";\n\n  /**\n   * metadata of room\n   *\n   * @generated from field: string metadata = 5;\n   */\n  metadata = \"\";\n\n  /**\n   * auto-egress configurations\n   *\n   * @generated from field: livekit.RoomEgress egress = 6;\n   */\n  egress?: RoomEgress;\n\n  /**\n   * playout delay of subscriber\n   *\n   * @generated from field: uint32 min_playout_delay = 7;\n   */\n  minPlayoutDelay = 0;\n\n  /**\n   * @generated from field: uint32 max_playout_delay = 8;\n   */\n  maxPlayoutDelay = 0;\n\n  /**\n   * improves A/V sync when playout_delay set to a value larger than 200ms. It will disables transceiver re-use\n   * so not recommended for rooms with frequent subscription changes\n   *\n   * @generated from field: bool sync_streams = 9;\n   */\n  syncStreams = false;\n\n  /**\n   * replay\n   *\n   * @generated from field: bool replay_enabled = 13;\n   */\n  replayEnabled = false;\n\n  /**\n   * Define agents that should be dispatched to this room\n   *\n   * NEXT-ID: 15\n   *\n   * @generated from field: repeated livekit.RoomAgentDispatch agents = 14;\n   */\n  agents: RoomAgentDispatch[] = [];\n\n  constructor(data?: PartialMessage<CreateRoomRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.CreateRoomRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"room_preset\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"empty_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 10, name: \"departure_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"max_participants\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"node_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"egress\", kind: \"message\", T: RoomEgress },\n    { no: 7, name: \"min_playout_delay\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 8, name: \"max_playout_delay\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 9, name: \"sync_streams\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 13, name: \"replay_enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 14, name: \"agents\", kind: \"message\", T: RoomAgentDispatch, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRoomRequest {\n    return new CreateRoomRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRoomRequest {\n    return new CreateRoomRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRoomRequest {\n    return new CreateRoomRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateRoomRequest | PlainMessage<CreateRoomRequest> | undefined, b: CreateRoomRequest | PlainMessage<CreateRoomRequest> | undefined): boolean {\n    return proto3.util.equals(CreateRoomRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RoomEgress\n */\nexport class RoomEgress extends Message<RoomEgress> {\n  /**\n   * @generated from field: livekit.RoomCompositeEgressRequest room = 1;\n   */\n  room?: RoomCompositeEgressRequest;\n\n  /**\n   * @generated from field: livekit.AutoParticipantEgress participant = 3;\n   */\n  participant?: AutoParticipantEgress;\n\n  /**\n   * @generated from field: livekit.AutoTrackEgress tracks = 2;\n   */\n  tracks?: AutoTrackEgress;\n\n  constructor(data?: PartialMessage<RoomEgress>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RoomEgress\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"message\", T: RoomCompositeEgressRequest },\n    { no: 3, name: \"participant\", kind: \"message\", T: AutoParticipantEgress },\n    { no: 2, name: \"tracks\", kind: \"message\", T: AutoTrackEgress },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomEgress {\n    return new RoomEgress().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomEgress {\n    return new RoomEgress().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomEgress {\n    return new RoomEgress().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RoomEgress | PlainMessage<RoomEgress> | undefined, b: RoomEgress | PlainMessage<RoomEgress> | undefined): boolean {\n    return proto3.util.equals(RoomEgress, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RoomAgent\n */\nexport class RoomAgent extends Message<RoomAgent> {\n  /**\n   * @generated from field: repeated livekit.RoomAgentDispatch dispatches = 1;\n   */\n  dispatches: RoomAgentDispatch[] = [];\n\n  constructor(data?: PartialMessage<RoomAgent>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RoomAgent\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"dispatches\", kind: \"message\", T: RoomAgentDispatch, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomAgent {\n    return new RoomAgent().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomAgent {\n    return new RoomAgent().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomAgent {\n    return new RoomAgent().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RoomAgent | PlainMessage<RoomAgent> | undefined, b: RoomAgent | PlainMessage<RoomAgent> | undefined): boolean {\n    return proto3.util.equals(RoomAgent, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListRoomsRequest\n */\nexport class ListRoomsRequest extends Message<ListRoomsRequest> {\n  /**\n   * when set, will only return rooms with name match\n   *\n   * @generated from field: repeated string names = 1;\n   */\n  names: string[] = [];\n\n  constructor(data?: PartialMessage<ListRoomsRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListRoomsRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"names\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRoomsRequest {\n    return new ListRoomsRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRoomsRequest {\n    return new ListRoomsRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRoomsRequest {\n    return new ListRoomsRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListRoomsRequest | PlainMessage<ListRoomsRequest> | undefined, b: ListRoomsRequest | PlainMessage<ListRoomsRequest> | undefined): boolean {\n    return proto3.util.equals(ListRoomsRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListRoomsResponse\n */\nexport class ListRoomsResponse extends Message<ListRoomsResponse> {\n  /**\n   * @generated from field: repeated livekit.Room rooms = 1;\n   */\n  rooms: Room[] = [];\n\n  constructor(data?: PartialMessage<ListRoomsResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListRoomsResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"rooms\", kind: \"message\", T: Room, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRoomsResponse {\n    return new ListRoomsResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRoomsResponse {\n    return new ListRoomsResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRoomsResponse {\n    return new ListRoomsResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListRoomsResponse | PlainMessage<ListRoomsResponse> | undefined, b: ListRoomsResponse | PlainMessage<ListRoomsResponse> | undefined): boolean {\n    return proto3.util.equals(ListRoomsResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.DeleteRoomRequest\n */\nexport class DeleteRoomRequest extends Message<DeleteRoomRequest> {\n  /**\n   * name of the room\n   *\n   * @generated from field: string room = 1;\n   */\n  room = \"\";\n\n  constructor(data?: PartialMessage<DeleteRoomRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.DeleteRoomRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoomRequest {\n    return new DeleteRoomRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoomRequest {\n    return new DeleteRoomRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoomRequest {\n    return new DeleteRoomRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteRoomRequest | PlainMessage<DeleteRoomRequest> | undefined, b: DeleteRoomRequest | PlainMessage<DeleteRoomRequest> | undefined): boolean {\n    return proto3.util.equals(DeleteRoomRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.DeleteRoomResponse\n */\nexport class DeleteRoomResponse extends Message<DeleteRoomResponse> {\n  constructor(data?: PartialMessage<DeleteRoomResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.DeleteRoomResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoomResponse {\n    return new DeleteRoomResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoomResponse {\n    return new DeleteRoomResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoomResponse {\n    return new DeleteRoomResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteRoomResponse | PlainMessage<DeleteRoomResponse> | undefined, b: DeleteRoomResponse | PlainMessage<DeleteRoomResponse> | undefined): boolean {\n    return proto3.util.equals(DeleteRoomResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListParticipantsRequest\n */\nexport class ListParticipantsRequest extends Message<ListParticipantsRequest> {\n  /**\n   * name of the room\n   *\n   * @generated from field: string room = 1;\n   */\n  room = \"\";\n\n  constructor(data?: PartialMessage<ListParticipantsRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListParticipantsRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListParticipantsRequest {\n    return new ListParticipantsRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListParticipantsRequest {\n    return new ListParticipantsRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListParticipantsRequest {\n    return new ListParticipantsRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListParticipantsRequest | PlainMessage<ListParticipantsRequest> | undefined, b: ListParticipantsRequest | PlainMessage<ListParticipantsRequest> | undefined): boolean {\n    return proto3.util.equals(ListParticipantsRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListParticipantsResponse\n */\nexport class ListParticipantsResponse extends Message<ListParticipantsResponse> {\n  /**\n   * @generated from field: repeated livekit.ParticipantInfo participants = 1;\n   */\n  participants: ParticipantInfo[] = [];\n\n  constructor(data?: PartialMessage<ListParticipantsResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListParticipantsResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"participants\", kind: \"message\", T: ParticipantInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListParticipantsResponse {\n    return new ListParticipantsResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListParticipantsResponse {\n    return new ListParticipantsResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListParticipantsResponse {\n    return new ListParticipantsResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListParticipantsResponse | PlainMessage<ListParticipantsResponse> | undefined, b: ListParticipantsResponse | PlainMessage<ListParticipantsResponse> | undefined): boolean {\n    return proto3.util.equals(ListParticipantsResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RoomParticipantIdentity\n */\nexport class RoomParticipantIdentity extends Message<RoomParticipantIdentity> {\n  /**\n   * name of the room\n   *\n   * @generated from field: string room = 1;\n   */\n  room = \"\";\n\n  /**\n   * identity of the participant\n   *\n   * @generated from field: string identity = 2;\n   */\n  identity = \"\";\n\n  constructor(data?: PartialMessage<RoomParticipantIdentity>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RoomParticipantIdentity\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomParticipantIdentity {\n    return new RoomParticipantIdentity().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomParticipantIdentity {\n    return new RoomParticipantIdentity().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomParticipantIdentity {\n    return new RoomParticipantIdentity().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RoomParticipantIdentity | PlainMessage<RoomParticipantIdentity> | undefined, b: RoomParticipantIdentity | PlainMessage<RoomParticipantIdentity> | undefined): boolean {\n    return proto3.util.equals(RoomParticipantIdentity, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RemoveParticipantResponse\n */\nexport class RemoveParticipantResponse extends Message<RemoveParticipantResponse> {\n  constructor(data?: PartialMessage<RemoveParticipantResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RemoveParticipantResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveParticipantResponse {\n    return new RemoveParticipantResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveParticipantResponse {\n    return new RemoveParticipantResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveParticipantResponse {\n    return new RemoveParticipantResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RemoveParticipantResponse | PlainMessage<RemoveParticipantResponse> | undefined, b: RemoveParticipantResponse | PlainMessage<RemoveParticipantResponse> | undefined): boolean {\n    return proto3.util.equals(RemoveParticipantResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.MuteRoomTrackRequest\n */\nexport class MuteRoomTrackRequest extends Message<MuteRoomTrackRequest> {\n  /**\n   * name of the room\n   *\n   * @generated from field: string room = 1;\n   */\n  room = \"\";\n\n  /**\n   * @generated from field: string identity = 2;\n   */\n  identity = \"\";\n\n  /**\n   * sid of the track to mute\n   *\n   * @generated from field: string track_sid = 3;\n   */\n  trackSid = \"\";\n\n  /**\n   * set to true to mute, false to unmute\n   *\n   * @generated from field: bool muted = 4;\n   */\n  muted = false;\n\n  constructor(data?: PartialMessage<MuteRoomTrackRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.MuteRoomTrackRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MuteRoomTrackRequest {\n    return new MuteRoomTrackRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MuteRoomTrackRequest {\n    return new MuteRoomTrackRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MuteRoomTrackRequest {\n    return new MuteRoomTrackRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: MuteRoomTrackRequest | PlainMessage<MuteRoomTrackRequest> | undefined, b: MuteRoomTrackRequest | PlainMessage<MuteRoomTrackRequest> | undefined): boolean {\n    return proto3.util.equals(MuteRoomTrackRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.MuteRoomTrackResponse\n */\nexport class MuteRoomTrackResponse extends Message<MuteRoomTrackResponse> {\n  /**\n   * @generated from field: livekit.TrackInfo track = 1;\n   */\n  track?: TrackInfo;\n\n  constructor(data?: PartialMessage<MuteRoomTrackResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.MuteRoomTrackResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"track\", kind: \"message\", T: TrackInfo },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MuteRoomTrackResponse {\n    return new MuteRoomTrackResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MuteRoomTrackResponse {\n    return new MuteRoomTrackResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MuteRoomTrackResponse {\n    return new MuteRoomTrackResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: MuteRoomTrackResponse | PlainMessage<MuteRoomTrackResponse> | undefined, b: MuteRoomTrackResponse | PlainMessage<MuteRoomTrackResponse> | undefined): boolean {\n    return proto3.util.equals(MuteRoomTrackResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateParticipantRequest\n */\nexport class UpdateParticipantRequest extends Message<UpdateParticipantRequest> {\n  /**\n   * @generated from field: string room = 1;\n   */\n  room = \"\";\n\n  /**\n   * @generated from field: string identity = 2;\n   */\n  identity = \"\";\n\n  /**\n   * metadata to update. skipping updates if left empty\n   *\n   * @generated from field: string metadata = 3;\n   */\n  metadata = \"\";\n\n  /**\n   * set to update the participant's permissions\n   *\n   * @generated from field: livekit.ParticipantPermission permission = 4;\n   */\n  permission?: ParticipantPermission;\n\n  /**\n   * display name to update\n   *\n   * @generated from field: string name = 5;\n   */\n  name = \"\";\n\n  /**\n   * attributes to update. it only updates attributes that have been set\n   * to delete attributes, set the value to an empty string\n   *\n   * @generated from field: map<string, string> attributes = 6;\n   */\n  attributes: { [key: string]: string } = {};\n\n  constructor(data?: PartialMessage<UpdateParticipantRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateParticipantRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"permission\", kind: \"message\", T: ParticipantPermission },\n    { no: 5, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateParticipantRequest {\n    return new UpdateParticipantRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateParticipantRequest {\n    return new UpdateParticipantRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateParticipantRequest {\n    return new UpdateParticipantRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateParticipantRequest | PlainMessage<UpdateParticipantRequest> | undefined, b: UpdateParticipantRequest | PlainMessage<UpdateParticipantRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateParticipantRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateSubscriptionsRequest\n */\nexport class UpdateSubscriptionsRequest extends Message<UpdateSubscriptionsRequest> {\n  /**\n   * @generated from field: string room = 1;\n   */\n  room = \"\";\n\n  /**\n   * @generated from field: string identity = 2;\n   */\n  identity = \"\";\n\n  /**\n   * list of sids of tracks\n   *\n   * @generated from field: repeated string track_sids = 3;\n   */\n  trackSids: string[] = [];\n\n  /**\n   * set to true to subscribe, false to unsubscribe from tracks\n   *\n   * @generated from field: bool subscribe = 4;\n   */\n  subscribe = false;\n\n  /**\n   * list of participants and their tracks\n   *\n   * @generated from field: repeated livekit.ParticipantTracks participant_tracks = 5;\n   */\n  participantTracks: ParticipantTracks[] = [];\n\n  constructor(data?: PartialMessage<UpdateSubscriptionsRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateSubscriptionsRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"subscribe\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"participant_tracks\", kind: \"message\", T: ParticipantTracks, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSubscriptionsRequest {\n    return new UpdateSubscriptionsRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSubscriptionsRequest {\n    return new UpdateSubscriptionsRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSubscriptionsRequest {\n    return new UpdateSubscriptionsRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateSubscriptionsRequest | PlainMessage<UpdateSubscriptionsRequest> | undefined, b: UpdateSubscriptionsRequest | PlainMessage<UpdateSubscriptionsRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateSubscriptionsRequest, a, b);\n  }\n}\n\n/**\n * empty for now\n *\n * @generated from message livekit.UpdateSubscriptionsResponse\n */\nexport class UpdateSubscriptionsResponse extends Message<UpdateSubscriptionsResponse> {\n  constructor(data?: PartialMessage<UpdateSubscriptionsResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateSubscriptionsResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSubscriptionsResponse {\n    return new UpdateSubscriptionsResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSubscriptionsResponse {\n    return new UpdateSubscriptionsResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSubscriptionsResponse {\n    return new UpdateSubscriptionsResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateSubscriptionsResponse | PlainMessage<UpdateSubscriptionsResponse> | undefined, b: UpdateSubscriptionsResponse | PlainMessage<UpdateSubscriptionsResponse> | undefined): boolean {\n    return proto3.util.equals(UpdateSubscriptionsResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SendDataRequest\n */\nexport class SendDataRequest extends Message<SendDataRequest> {\n  /**\n   * @generated from field: string room = 1;\n   */\n  room = \"\";\n\n  /**\n   * @generated from field: bytes data = 2;\n   */\n  data = new Uint8Array(0);\n\n  /**\n   * @generated from field: livekit.DataPacket.Kind kind = 3;\n   */\n  kind = DataPacket_Kind.RELIABLE;\n\n  /**\n   * mark deprecated\n   *\n   * @generated from field: repeated string destination_sids = 4 [deprecated = true];\n   * @deprecated\n   */\n  destinationSids: string[] = [];\n\n  /**\n   * when set, only forward to these identities\n   *\n   * @generated from field: repeated string destination_identities = 6;\n   */\n  destinationIdentities: string[] = [];\n\n  /**\n   * @generated from field: optional string topic = 5;\n   */\n  topic?: string;\n\n  constructor(data?: PartialMessage<SendDataRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SendDataRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(DataPacket_Kind) },\n    { no: 4, name: \"destination_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 6, name: \"destination_identities\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendDataRequest {\n    return new SendDataRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendDataRequest {\n    return new SendDataRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendDataRequest {\n    return new SendDataRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SendDataRequest | PlainMessage<SendDataRequest> | undefined, b: SendDataRequest | PlainMessage<SendDataRequest> | undefined): boolean {\n    return proto3.util.equals(SendDataRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SendDataResponse\n */\nexport class SendDataResponse extends Message<SendDataResponse> {\n  constructor(data?: PartialMessage<SendDataResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SendDataResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendDataResponse {\n    return new SendDataResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendDataResponse {\n    return new SendDataResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendDataResponse {\n    return new SendDataResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SendDataResponse | PlainMessage<SendDataResponse> | undefined, b: SendDataResponse | PlainMessage<SendDataResponse> | undefined): boolean {\n    return proto3.util.equals(SendDataResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateRoomMetadataRequest\n */\nexport class UpdateRoomMetadataRequest extends Message<UpdateRoomMetadataRequest> {\n  /**\n   * @generated from field: string room = 1;\n   */\n  room = \"\";\n\n  /**\n   * metadata to update. skipping updates if left empty\n   *\n   * @generated from field: string metadata = 2;\n   */\n  metadata = \"\";\n\n  constructor(data?: PartialMessage<UpdateRoomMetadataRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateRoomMetadataRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoomMetadataRequest {\n    return new UpdateRoomMetadataRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoomMetadataRequest {\n    return new UpdateRoomMetadataRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoomMetadataRequest {\n    return new UpdateRoomMetadataRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateRoomMetadataRequest | PlainMessage<UpdateRoomMetadataRequest> | undefined, b: UpdateRoomMetadataRequest | PlainMessage<UpdateRoomMetadataRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateRoomMetadataRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RoomConfiguration\n */\nexport class RoomConfiguration extends Message<RoomConfiguration> {\n  /**\n   * Used as ID, must be unique\n   *\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * number of seconds to keep the room open if no one joins\n   *\n   * @generated from field: uint32 empty_timeout = 2;\n   */\n  emptyTimeout = 0;\n\n  /**\n   * number of seconds to keep the room open after everyone leaves\n   *\n   * @generated from field: uint32 departure_timeout = 3;\n   */\n  departureTimeout = 0;\n\n  /**\n   * limit number of participants that can be in a room, excluding Egress and Ingress participants\n   *\n   * @generated from field: uint32 max_participants = 4;\n   */\n  maxParticipants = 0;\n\n  /**\n   * egress\n   *\n   * @generated from field: livekit.RoomEgress egress = 5;\n   */\n  egress?: RoomEgress;\n\n  /**\n   * playout delay of subscriber\n   *\n   * @generated from field: uint32 min_playout_delay = 7;\n   */\n  minPlayoutDelay = 0;\n\n  /**\n   * @generated from field: uint32 max_playout_delay = 8;\n   */\n  maxPlayoutDelay = 0;\n\n  /**\n   * improves A/V sync when playout_delay set to a value larger than 200ms. It will disables transceiver re-use\n   * so not recommended for rooms with frequent subscription changes\n   *\n   * @generated from field: bool sync_streams = 9;\n   */\n  syncStreams = false;\n\n  /**\n   * Define agents that should be dispatched to this room\n   *\n   * @generated from field: repeated livekit.RoomAgentDispatch agents = 10;\n   */\n  agents: RoomAgentDispatch[] = [];\n\n  constructor(data?: PartialMessage<RoomConfiguration>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RoomConfiguration\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"empty_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"departure_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"max_participants\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"egress\", kind: \"message\", T: RoomEgress },\n    { no: 7, name: \"min_playout_delay\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 8, name: \"max_playout_delay\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 9, name: \"sync_streams\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 10, name: \"agents\", kind: \"message\", T: RoomAgentDispatch, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomConfiguration {\n    return new RoomConfiguration().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomConfiguration {\n    return new RoomConfiguration().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomConfiguration {\n    return new RoomConfiguration().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RoomConfiguration | PlainMessage<RoomConfiguration> | undefined, b: RoomConfiguration | PlainMessage<RoomConfiguration> | undefined): boolean {\n    return proto3.util.equals(RoomConfiguration, a, b);\n  }\n}\n\n"],"mappings":"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","names":[]}