{"version":3,"sources":["../../src/gen/livekit_agent_dispatch_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file livekit_agent_dispatch.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3, protoInt64 } from \"@bufbuild/protobuf\";\nimport { Job } from \"./livekit_agent_pb.js\";\n\n/**\n * @generated from message livekit.CreateAgentDispatchRequest\n */\nexport class CreateAgentDispatchRequest extends Message<CreateAgentDispatchRequest> {\n  /**\n   * @generated from field: string agent_name = 1;\n   */\n  agentName = \"\";\n\n  /**\n   * @generated from field: string room = 2;\n   */\n  room = \"\";\n\n  /**\n   * @generated from field: string metadata = 3;\n   */\n  metadata = \"\";\n\n  constructor(data?: PartialMessage<CreateAgentDispatchRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.CreateAgentDispatchRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"agent_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAgentDispatchRequest {\n    return new CreateAgentDispatchRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAgentDispatchRequest {\n    return new CreateAgentDispatchRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAgentDispatchRequest {\n    return new CreateAgentDispatchRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateAgentDispatchRequest | PlainMessage<CreateAgentDispatchRequest> | undefined, b: CreateAgentDispatchRequest | PlainMessage<CreateAgentDispatchRequest> | undefined): boolean {\n    return proto3.util.equals(CreateAgentDispatchRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.RoomAgentDispatch\n */\nexport class RoomAgentDispatch extends Message<RoomAgentDispatch> {\n  /**\n   * @generated from field: string agent_name = 1;\n   */\n  agentName = \"\";\n\n  /**\n   * @generated from field: string metadata = 2;\n   */\n  metadata = \"\";\n\n  constructor(data?: PartialMessage<RoomAgentDispatch>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RoomAgentDispatch\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"agent_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomAgentDispatch {\n    return new RoomAgentDispatch().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomAgentDispatch {\n    return new RoomAgentDispatch().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomAgentDispatch {\n    return new RoomAgentDispatch().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RoomAgentDispatch | PlainMessage<RoomAgentDispatch> | undefined, b: RoomAgentDispatch | PlainMessage<RoomAgentDispatch> | undefined): boolean {\n    return proto3.util.equals(RoomAgentDispatch, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.DeleteAgentDispatchRequest\n */\nexport class DeleteAgentDispatchRequest extends Message<DeleteAgentDispatchRequest> {\n  /**\n   * @generated from field: string dispatch_id = 1;\n   */\n  dispatchId = \"\";\n\n  /**\n   * @generated from field: string room = 2;\n   */\n  room = \"\";\n\n  constructor(data?: PartialMessage<DeleteAgentDispatchRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.DeleteAgentDispatchRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"dispatch_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAgentDispatchRequest {\n    return new DeleteAgentDispatchRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAgentDispatchRequest {\n    return new DeleteAgentDispatchRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAgentDispatchRequest {\n    return new DeleteAgentDispatchRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteAgentDispatchRequest | PlainMessage<DeleteAgentDispatchRequest> | undefined, b: DeleteAgentDispatchRequest | PlainMessage<DeleteAgentDispatchRequest> | undefined): boolean {\n    return proto3.util.equals(DeleteAgentDispatchRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListAgentDispatchRequest\n */\nexport class ListAgentDispatchRequest extends Message<ListAgentDispatchRequest> {\n  /**\n   * if set, only the dispatch whose id is given will be returned\n   *\n   * @generated from field: string dispatch_id = 1;\n   */\n  dispatchId = \"\";\n\n  /**\n   * name of the room to list agents for. Must be set.\n   *\n   * @generated from field: string room = 2;\n   */\n  room = \"\";\n\n  constructor(data?: PartialMessage<ListAgentDispatchRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListAgentDispatchRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"dispatch_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentDispatchRequest {\n    return new ListAgentDispatchRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentDispatchRequest {\n    return new ListAgentDispatchRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentDispatchRequest {\n    return new ListAgentDispatchRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListAgentDispatchRequest | PlainMessage<ListAgentDispatchRequest> | undefined, b: ListAgentDispatchRequest | PlainMessage<ListAgentDispatchRequest> | undefined): boolean {\n    return proto3.util.equals(ListAgentDispatchRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListAgentDispatchResponse\n */\nexport class ListAgentDispatchResponse extends Message<ListAgentDispatchResponse> {\n  /**\n   * @generated from field: repeated livekit.AgentDispatch agent_dispatches = 1;\n   */\n  agentDispatches: AgentDispatch[] = [];\n\n  constructor(data?: PartialMessage<ListAgentDispatchResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListAgentDispatchResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"agent_dispatches\", kind: \"message\", T: AgentDispatch, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentDispatchResponse {\n    return new ListAgentDispatchResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentDispatchResponse {\n    return new ListAgentDispatchResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentDispatchResponse {\n    return new ListAgentDispatchResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListAgentDispatchResponse | PlainMessage<ListAgentDispatchResponse> | undefined, b: ListAgentDispatchResponse | PlainMessage<ListAgentDispatchResponse> | undefined): boolean {\n    return proto3.util.equals(ListAgentDispatchResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.AgentDispatch\n */\nexport class AgentDispatch extends Message<AgentDispatch> {\n  /**\n   * @generated from field: string id = 1;\n   */\n  id = \"\";\n\n  /**\n   * @generated from field: string agent_name = 2;\n   */\n  agentName = \"\";\n\n  /**\n   * @generated from field: string room = 3;\n   */\n  room = \"\";\n\n  /**\n   * @generated from field: string metadata = 4;\n   */\n  metadata = \"\";\n\n  /**\n   * @generated from field: livekit.AgentDispatchState state = 5;\n   */\n  state?: AgentDispatchState;\n\n  constructor(data?: PartialMessage<AgentDispatch>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.AgentDispatch\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"agent_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"state\", kind: \"message\", T: AgentDispatchState },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentDispatch {\n    return new AgentDispatch().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentDispatch {\n    return new AgentDispatch().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentDispatch {\n    return new AgentDispatch().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AgentDispatch | PlainMessage<AgentDispatch> | undefined, b: AgentDispatch | PlainMessage<AgentDispatch> | undefined): boolean {\n    return proto3.util.equals(AgentDispatch, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.AgentDispatchState\n */\nexport class AgentDispatchState extends Message<AgentDispatchState> {\n  /**\n   * For dispatches of tyoe JT_ROOM, there will be at most 1 job. \n   * For dispatches of type JT_PUBLISHER, there will be 1 per publisher.\n   *\n   * @generated from field: repeated livekit.Job jobs = 1;\n   */\n  jobs: Job[] = [];\n\n  /**\n   * @generated from field: int64 created_at = 2;\n   */\n  createdAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 deleted_at = 3;\n   */\n  deletedAt = protoInt64.zero;\n\n  constructor(data?: PartialMessage<AgentDispatchState>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.AgentDispatchState\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"jobs\", kind: \"message\", T: Job, repeated: true },\n    { no: 2, name: \"created_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"deleted_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentDispatchState {\n    return new AgentDispatchState().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentDispatchState {\n    return new AgentDispatchState().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentDispatchState {\n    return new AgentDispatchState().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AgentDispatchState | PlainMessage<AgentDispatchState> | undefined, b: AgentDispatchState | PlainMessage<AgentDispatchState> | undefined): boolean {\n    return proto3.util.equals(AgentDispatchState, a, b);\n  }\n}\n\n"],"mappings":"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","names":[]}