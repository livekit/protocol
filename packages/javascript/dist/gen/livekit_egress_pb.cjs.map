{"version":3,"sources":["../../src/gen/livekit_egress_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=ts\"\n// @generated from file livekit_egress.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3, protoInt64 } from \"@bufbuild/protobuf\";\nimport { AudioCodec, ImageCodec, VideoCodec } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from enum livekit.EncodedFileType\n */\nexport enum EncodedFileType {\n  /**\n   * file type chosen based on codecs\n   *\n   * @generated from enum value: DEFAULT_FILETYPE = 0;\n   */\n  DEFAULT_FILETYPE = 0,\n\n  /**\n   * @generated from enum value: MP4 = 1;\n   */\n  MP4 = 1,\n\n  /**\n   * @generated from enum value: OGG = 2;\n   */\n  OGG = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(EncodedFileType)\nproto3.util.setEnumType(EncodedFileType, \"livekit.EncodedFileType\", [\n  { no: 0, name: \"DEFAULT_FILETYPE\" },\n  { no: 1, name: \"MP4\" },\n  { no: 2, name: \"OGG\" },\n]);\n\n/**\n * @generated from enum livekit.SegmentedFileProtocol\n */\nexport enum SegmentedFileProtocol {\n  /**\n   * @generated from enum value: DEFAULT_SEGMENTED_FILE_PROTOCOL = 0;\n   */\n  DEFAULT_SEGMENTED_FILE_PROTOCOL = 0,\n\n  /**\n   * @generated from enum value: HLS_PROTOCOL = 1;\n   */\n  HLS_PROTOCOL = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(SegmentedFileProtocol)\nproto3.util.setEnumType(SegmentedFileProtocol, \"livekit.SegmentedFileProtocol\", [\n  { no: 0, name: \"DEFAULT_SEGMENTED_FILE_PROTOCOL\" },\n  { no: 1, name: \"HLS_PROTOCOL\" },\n]);\n\n/**\n * @generated from enum livekit.SegmentedFileSuffix\n */\nexport enum SegmentedFileSuffix {\n  /**\n   * @generated from enum value: INDEX = 0;\n   */\n  INDEX = 0,\n\n  /**\n   * @generated from enum value: TIMESTAMP = 1;\n   */\n  TIMESTAMP = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(SegmentedFileSuffix)\nproto3.util.setEnumType(SegmentedFileSuffix, \"livekit.SegmentedFileSuffix\", [\n  { no: 0, name: \"INDEX\" },\n  { no: 1, name: \"TIMESTAMP\" },\n]);\n\n/**\n * @generated from enum livekit.ImageFileSuffix\n */\nexport enum ImageFileSuffix {\n  /**\n   * @generated from enum value: IMAGE_SUFFIX_INDEX = 0;\n   */\n  IMAGE_SUFFIX_INDEX = 0,\n\n  /**\n   * @generated from enum value: IMAGE_SUFFIX_TIMESTAMP = 1;\n   */\n  IMAGE_SUFFIX_TIMESTAMP = 1,\n}\n// Retrieve enum metadata with: proto3.getEnumType(ImageFileSuffix)\nproto3.util.setEnumType(ImageFileSuffix, \"livekit.ImageFileSuffix\", [\n  { no: 0, name: \"IMAGE_SUFFIX_INDEX\" },\n  { no: 1, name: \"IMAGE_SUFFIX_TIMESTAMP\" },\n]);\n\n/**\n * @generated from enum livekit.StreamProtocol\n */\nexport enum StreamProtocol {\n  /**\n   * protocol chosen based on urls\n   *\n   * @generated from enum value: DEFAULT_PROTOCOL = 0;\n   */\n  DEFAULT_PROTOCOL = 0,\n\n  /**\n   * @generated from enum value: RTMP = 1;\n   */\n  RTMP = 1,\n\n  /**\n   * @generated from enum value: SRT = 2;\n   */\n  SRT = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(StreamProtocol)\nproto3.util.setEnumType(StreamProtocol, \"livekit.StreamProtocol\", [\n  { no: 0, name: \"DEFAULT_PROTOCOL\" },\n  { no: 1, name: \"RTMP\" },\n  { no: 2, name: \"SRT\" },\n]);\n\n/**\n * @generated from enum livekit.EncodingOptionsPreset\n */\nexport enum EncodingOptionsPreset {\n  /**\n   *  1280x720, 30fps, 3000kpbs, H.264_MAIN / OPUS\n   *\n   * @generated from enum value: H264_720P_30 = 0;\n   */\n  H264_720P_30 = 0,\n\n  /**\n   *  1280x720, 60fps, 4500kbps, H.264_MAIN / OPUS\n   *\n   * @generated from enum value: H264_720P_60 = 1;\n   */\n  H264_720P_60 = 1,\n\n  /**\n   * 1920x1080, 30fps, 4500kbps, H.264_MAIN / OPUS\n   *\n   * @generated from enum value: H264_1080P_30 = 2;\n   */\n  H264_1080P_30 = 2,\n\n  /**\n   * 1920x1080, 60fps, 6000kbps, H.264_MAIN / OPUS\n   *\n   * @generated from enum value: H264_1080P_60 = 3;\n   */\n  H264_1080P_60 = 3,\n\n  /**\n   *  720x1280, 30fps, 3000kpbs, H.264_MAIN / OPUS\n   *\n   * @generated from enum value: PORTRAIT_H264_720P_30 = 4;\n   */\n  PORTRAIT_H264_720P_30 = 4,\n\n  /**\n   *  720x1280, 60fps, 4500kbps, H.264_MAIN / OPUS\n   *\n   * @generated from enum value: PORTRAIT_H264_720P_60 = 5;\n   */\n  PORTRAIT_H264_720P_60 = 5,\n\n  /**\n   * 1080x1920, 30fps, 4500kbps, H.264_MAIN / OPUS\n   *\n   * @generated from enum value: PORTRAIT_H264_1080P_30 = 6;\n   */\n  PORTRAIT_H264_1080P_30 = 6,\n\n  /**\n   * 1080x1920, 60fps, 6000kbps, H.264_MAIN / OPUS\n   *\n   * @generated from enum value: PORTRAIT_H264_1080P_60 = 7;\n   */\n  PORTRAIT_H264_1080P_60 = 7,\n}\n// Retrieve enum metadata with: proto3.getEnumType(EncodingOptionsPreset)\nproto3.util.setEnumType(EncodingOptionsPreset, \"livekit.EncodingOptionsPreset\", [\n  { no: 0, name: \"H264_720P_30\" },\n  { no: 1, name: \"H264_720P_60\" },\n  { no: 2, name: \"H264_1080P_30\" },\n  { no: 3, name: \"H264_1080P_60\" },\n  { no: 4, name: \"PORTRAIT_H264_720P_30\" },\n  { no: 5, name: \"PORTRAIT_H264_720P_60\" },\n  { no: 6, name: \"PORTRAIT_H264_1080P_30\" },\n  { no: 7, name: \"PORTRAIT_H264_1080P_60\" },\n]);\n\n/**\n * @generated from enum livekit.EgressStatus\n */\nexport enum EgressStatus {\n  /**\n   * @generated from enum value: EGRESS_STARTING = 0;\n   */\n  EGRESS_STARTING = 0,\n\n  /**\n   * @generated from enum value: EGRESS_ACTIVE = 1;\n   */\n  EGRESS_ACTIVE = 1,\n\n  /**\n   * @generated from enum value: EGRESS_ENDING = 2;\n   */\n  EGRESS_ENDING = 2,\n\n  /**\n   * @generated from enum value: EGRESS_COMPLETE = 3;\n   */\n  EGRESS_COMPLETE = 3,\n\n  /**\n   * @generated from enum value: EGRESS_FAILED = 4;\n   */\n  EGRESS_FAILED = 4,\n\n  /**\n   * @generated from enum value: EGRESS_ABORTED = 5;\n   */\n  EGRESS_ABORTED = 5,\n\n  /**\n   * @generated from enum value: EGRESS_LIMIT_REACHED = 6;\n   */\n  EGRESS_LIMIT_REACHED = 6,\n}\n// Retrieve enum metadata with: proto3.getEnumType(EgressStatus)\nproto3.util.setEnumType(EgressStatus, \"livekit.EgressStatus\", [\n  { no: 0, name: \"EGRESS_STARTING\" },\n  { no: 1, name: \"EGRESS_ACTIVE\" },\n  { no: 2, name: \"EGRESS_ENDING\" },\n  { no: 3, name: \"EGRESS_COMPLETE\" },\n  { no: 4, name: \"EGRESS_FAILED\" },\n  { no: 5, name: \"EGRESS_ABORTED\" },\n  { no: 6, name: \"EGRESS_LIMIT_REACHED\" },\n]);\n\n/**\n * composite using a web browser\n *\n * @generated from message livekit.RoomCompositeEgressRequest\n */\nexport class RoomCompositeEgressRequest extends Message<RoomCompositeEgressRequest> {\n  /**\n   * required\n   *\n   * @generated from field: string room_name = 1;\n   */\n  roomName = \"\";\n\n  /**\n   * (optional)\n   *\n   * @generated from field: string layout = 2;\n   */\n  layout = \"\";\n\n  /**\n   * (default false)\n   *\n   * @generated from field: bool audio_only = 3;\n   */\n  audioOnly = false;\n\n  /**\n   * (default false)\n   *\n   * @generated from field: bool video_only = 4;\n   */\n  videoOnly = false;\n\n  /**\n   * template base url (default https://recorder.livekit.io)\n   *\n   * @generated from field: string custom_base_url = 5;\n   */\n  customBaseUrl = \"\";\n\n  /**\n   * deprecated (use _output fields)\n   *\n   * @generated from oneof livekit.RoomCompositeEgressRequest.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.EncodedFileOutput file = 6 [deprecated = true];\n     * @deprecated\n     */\n    value: EncodedFileOutput;\n    case: \"file\";\n  } | {\n    /**\n     * @generated from field: livekit.StreamOutput stream = 7 [deprecated = true];\n     * @deprecated\n     */\n    value: StreamOutput;\n    case: \"stream\";\n  } | {\n    /**\n     * @generated from field: livekit.SegmentedFileOutput segments = 10 [deprecated = true];\n     * @deprecated\n     */\n    value: SegmentedFileOutput;\n    case: \"segments\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from oneof livekit.RoomCompositeEgressRequest.options\n   */\n  options: {\n    /**\n     * (default H264_720P_30)\n     *\n     * @generated from field: livekit.EncodingOptionsPreset preset = 8;\n     */\n    value: EncodingOptionsPreset;\n    case: \"preset\";\n  } | {\n    /**\n     * (optional)\n     *\n     * @generated from field: livekit.EncodingOptions advanced = 9;\n     */\n    value: EncodingOptions;\n    case: \"advanced\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from field: repeated livekit.EncodedFileOutput file_outputs = 11;\n   */\n  fileOutputs: EncodedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.StreamOutput stream_outputs = 12;\n   */\n  streamOutputs: StreamOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.SegmentedFileOutput segment_outputs = 13;\n   */\n  segmentOutputs: SegmentedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.ImageOutput image_outputs = 14;\n   */\n  imageOutputs: ImageOutput[] = [];\n\n  constructor(data?: PartialMessage<RoomCompositeEgressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.RoomCompositeEgressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"layout\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"audio_only\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"video_only\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"custom_base_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 7, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 10, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 8, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 9, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 11, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 12, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 13, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 14, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomCompositeEgressRequest {\n    return new RoomCompositeEgressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomCompositeEgressRequest {\n    return new RoomCompositeEgressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomCompositeEgressRequest {\n    return new RoomCompositeEgressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RoomCompositeEgressRequest | PlainMessage<RoomCompositeEgressRequest> | undefined, b: RoomCompositeEgressRequest | PlainMessage<RoomCompositeEgressRequest> | undefined): boolean {\n    return proto3.util.equals(RoomCompositeEgressRequest, a, b);\n  }\n}\n\n/**\n * record any website\n *\n * @generated from message livekit.WebEgressRequest\n */\nexport class WebEgressRequest extends Message<WebEgressRequest> {\n  /**\n   * @generated from field: string url = 1;\n   */\n  url = \"\";\n\n  /**\n   * @generated from field: bool audio_only = 2;\n   */\n  audioOnly = false;\n\n  /**\n   * @generated from field: bool video_only = 3;\n   */\n  videoOnly = false;\n\n  /**\n   * @generated from field: bool await_start_signal = 12;\n   */\n  awaitStartSignal = false;\n\n  /**\n   * deprecated (use _output fields)\n   *\n   * @generated from oneof livekit.WebEgressRequest.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.EncodedFileOutput file = 4 [deprecated = true];\n     * @deprecated\n     */\n    value: EncodedFileOutput;\n    case: \"file\";\n  } | {\n    /**\n     * @generated from field: livekit.StreamOutput stream = 5 [deprecated = true];\n     * @deprecated\n     */\n    value: StreamOutput;\n    case: \"stream\";\n  } | {\n    /**\n     * @generated from field: livekit.SegmentedFileOutput segments = 6 [deprecated = true];\n     * @deprecated\n     */\n    value: SegmentedFileOutput;\n    case: \"segments\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from oneof livekit.WebEgressRequest.options\n   */\n  options: {\n    /**\n     * @generated from field: livekit.EncodingOptionsPreset preset = 7;\n     */\n    value: EncodingOptionsPreset;\n    case: \"preset\";\n  } | {\n    /**\n     * @generated from field: livekit.EncodingOptions advanced = 8;\n     */\n    value: EncodingOptions;\n    case: \"advanced\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from field: repeated livekit.EncodedFileOutput file_outputs = 9;\n   */\n  fileOutputs: EncodedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.StreamOutput stream_outputs = 10;\n   */\n  streamOutputs: StreamOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.SegmentedFileOutput segment_outputs = 11;\n   */\n  segmentOutputs: SegmentedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.ImageOutput image_outputs = 13;\n   */\n  imageOutputs: ImageOutput[] = [];\n\n  constructor(data?: PartialMessage<WebEgressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.WebEgressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"audio_only\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"video_only\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 12, name: \"await_start_signal\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 5, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 6, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 7, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 8, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 9, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 10, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 11, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 13, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebEgressRequest {\n    return new WebEgressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebEgressRequest {\n    return new WebEgressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebEgressRequest {\n    return new WebEgressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: WebEgressRequest | PlainMessage<WebEgressRequest> | undefined, b: WebEgressRequest | PlainMessage<WebEgressRequest> | undefined): boolean {\n    return proto3.util.equals(WebEgressRequest, a, b);\n  }\n}\n\n/**\n * record audio and video from a single participant\n *\n * @generated from message livekit.ParticipantEgressRequest\n */\nexport class ParticipantEgressRequest extends Message<ParticipantEgressRequest> {\n  /**\n   * required\n   *\n   * @generated from field: string room_name = 1;\n   */\n  roomName = \"\";\n\n  /**\n   * required\n   *\n   * @generated from field: string identity = 2;\n   */\n  identity = \"\";\n\n  /**\n   * (default false)\n   *\n   * @generated from field: bool screen_share = 3;\n   */\n  screenShare = false;\n\n  /**\n   * @generated from oneof livekit.ParticipantEgressRequest.options\n   */\n  options: {\n    /**\n     * (default H264_720P_30)\n     *\n     * @generated from field: livekit.EncodingOptionsPreset preset = 4;\n     */\n    value: EncodingOptionsPreset;\n    case: \"preset\";\n  } | {\n    /**\n     * (optional)\n     *\n     * @generated from field: livekit.EncodingOptions advanced = 5;\n     */\n    value: EncodingOptions;\n    case: \"advanced\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from field: repeated livekit.EncodedFileOutput file_outputs = 6;\n   */\n  fileOutputs: EncodedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.StreamOutput stream_outputs = 7;\n   */\n  streamOutputs: StreamOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.SegmentedFileOutput segment_outputs = 8;\n   */\n  segmentOutputs: SegmentedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.ImageOutput image_outputs = 9;\n   */\n  imageOutputs: ImageOutput[] = [];\n\n  constructor(data?: PartialMessage<ParticipantEgressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ParticipantEgressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"screen_share\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 5, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 6, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 7, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 8, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 9, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantEgressRequest {\n    return new ParticipantEgressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantEgressRequest {\n    return new ParticipantEgressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantEgressRequest {\n    return new ParticipantEgressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ParticipantEgressRequest | PlainMessage<ParticipantEgressRequest> | undefined, b: ParticipantEgressRequest | PlainMessage<ParticipantEgressRequest> | undefined): boolean {\n    return proto3.util.equals(ParticipantEgressRequest, a, b);\n  }\n}\n\n/**\n * containerize up to one audio and one video track\n *\n * @generated from message livekit.TrackCompositeEgressRequest\n */\nexport class TrackCompositeEgressRequest extends Message<TrackCompositeEgressRequest> {\n  /**\n   * required\n   *\n   * @generated from field: string room_name = 1;\n   */\n  roomName = \"\";\n\n  /**\n   * (optional)\n   *\n   * @generated from field: string audio_track_id = 2;\n   */\n  audioTrackId = \"\";\n\n  /**\n   * (optional)\n   *\n   * @generated from field: string video_track_id = 3;\n   */\n  videoTrackId = \"\";\n\n  /**\n   * deprecated (use _output fields)\n   *\n   * @generated from oneof livekit.TrackCompositeEgressRequest.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.EncodedFileOutput file = 4 [deprecated = true];\n     * @deprecated\n     */\n    value: EncodedFileOutput;\n    case: \"file\";\n  } | {\n    /**\n     * @generated from field: livekit.StreamOutput stream = 5 [deprecated = true];\n     * @deprecated\n     */\n    value: StreamOutput;\n    case: \"stream\";\n  } | {\n    /**\n     * @generated from field: livekit.SegmentedFileOutput segments = 8 [deprecated = true];\n     * @deprecated\n     */\n    value: SegmentedFileOutput;\n    case: \"segments\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from oneof livekit.TrackCompositeEgressRequest.options\n   */\n  options: {\n    /**\n     * (default H264_720P_30)\n     *\n     * @generated from field: livekit.EncodingOptionsPreset preset = 6;\n     */\n    value: EncodingOptionsPreset;\n    case: \"preset\";\n  } | {\n    /**\n     * (optional)\n     *\n     * @generated from field: livekit.EncodingOptions advanced = 7;\n     */\n    value: EncodingOptions;\n    case: \"advanced\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from field: repeated livekit.EncodedFileOutput file_outputs = 11;\n   */\n  fileOutputs: EncodedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.StreamOutput stream_outputs = 12;\n   */\n  streamOutputs: StreamOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.SegmentedFileOutput segment_outputs = 13;\n   */\n  segmentOutputs: SegmentedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.ImageOutput image_outputs = 14;\n   */\n  imageOutputs: ImageOutput[] = [];\n\n  constructor(data?: PartialMessage<TrackCompositeEgressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.TrackCompositeEgressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"audio_track_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"video_track_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 5, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 8, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 6, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 7, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 11, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 12, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 13, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 14, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackCompositeEgressRequest {\n    return new TrackCompositeEgressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackCompositeEgressRequest {\n    return new TrackCompositeEgressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackCompositeEgressRequest {\n    return new TrackCompositeEgressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackCompositeEgressRequest | PlainMessage<TrackCompositeEgressRequest> | undefined, b: TrackCompositeEgressRequest | PlainMessage<TrackCompositeEgressRequest> | undefined): boolean {\n    return proto3.util.equals(TrackCompositeEgressRequest, a, b);\n  }\n}\n\n/**\n * record tracks individually, without transcoding\n *\n * @generated from message livekit.TrackEgressRequest\n */\nexport class TrackEgressRequest extends Message<TrackEgressRequest> {\n  /**\n   * required\n   *\n   * @generated from field: string room_name = 1;\n   */\n  roomName = \"\";\n\n  /**\n   * required\n   *\n   * @generated from field: string track_id = 2;\n   */\n  trackId = \"\";\n\n  /**\n   * required\n   *\n   * @generated from oneof livekit.TrackEgressRequest.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.DirectFileOutput file = 3;\n     */\n    value: DirectFileOutput;\n    case: \"file\";\n  } | {\n    /**\n     * @generated from field: string websocket_url = 4;\n     */\n    value: string;\n    case: \"websocketUrl\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<TrackEgressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.TrackEgressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"file\", kind: \"message\", T: DirectFileOutput, oneof: \"output\" },\n    { no: 4, name: \"websocket_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"output\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrackEgressRequest {\n    return new TrackEgressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrackEgressRequest {\n    return new TrackEgressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrackEgressRequest {\n    return new TrackEgressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TrackEgressRequest | PlainMessage<TrackEgressRequest> | undefined, b: TrackEgressRequest | PlainMessage<TrackEgressRequest> | undefined): boolean {\n    return proto3.util.equals(TrackEgressRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.EncodedFileOutput\n */\nexport class EncodedFileOutput extends Message<EncodedFileOutput> {\n  /**\n   * (optional)\n   *\n   * @generated from field: livekit.EncodedFileType file_type = 1;\n   */\n  fileType = EncodedFileType.DEFAULT_FILETYPE;\n\n  /**\n   * see egress docs for templating (default {room_name}-{time})\n   *\n   * @generated from field: string filepath = 2;\n   */\n  filepath = \"\";\n\n  /**\n   * disable upload of manifest file (default false)\n   *\n   * @generated from field: bool disable_manifest = 6;\n   */\n  disableManifest = false;\n\n  /**\n   * @generated from oneof livekit.EncodedFileOutput.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.S3Upload s3 = 3;\n     */\n    value: S3Upload;\n    case: \"s3\";\n  } | {\n    /**\n     * @generated from field: livekit.GCPUpload gcp = 4;\n     */\n    value: GCPUpload;\n    case: \"gcp\";\n  } | {\n    /**\n     * @generated from field: livekit.AzureBlobUpload azure = 5;\n     */\n    value: AzureBlobUpload;\n    case: \"azure\";\n  } | {\n    /**\n     * @generated from field: livekit.AliOSSUpload aliOSS = 7;\n     */\n    value: AliOSSUpload;\n    case: \"aliOSS\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<EncodedFileOutput>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.EncodedFileOutput\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"file_type\", kind: \"enum\", T: proto3.getEnumType(EncodedFileType) },\n    { no: 2, name: \"filepath\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 4, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 5, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 7, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncodedFileOutput {\n    return new EncodedFileOutput().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncodedFileOutput {\n    return new EncodedFileOutput().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncodedFileOutput {\n    return new EncodedFileOutput().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: EncodedFileOutput | PlainMessage<EncodedFileOutput> | undefined, b: EncodedFileOutput | PlainMessage<EncodedFileOutput> | undefined): boolean {\n    return proto3.util.equals(EncodedFileOutput, a, b);\n  }\n}\n\n/**\n * Used to generate HLS segments or other kind of segmented output\n *\n * @generated from message livekit.SegmentedFileOutput\n */\nexport class SegmentedFileOutput extends Message<SegmentedFileOutput> {\n  /**\n   * (optional)\n   *\n   * @generated from field: livekit.SegmentedFileProtocol protocol = 1;\n   */\n  protocol = SegmentedFileProtocol.DEFAULT_SEGMENTED_FILE_PROTOCOL;\n\n  /**\n   * (optional)\n   *\n   * @generated from field: string filename_prefix = 2;\n   */\n  filenamePrefix = \"\";\n\n  /**\n   * (optional)\n   *\n   * @generated from field: string playlist_name = 3;\n   */\n  playlistName = \"\";\n\n  /**\n   * (optional, disabled if not provided). Path of a live playlist\n   *\n   * @generated from field: string live_playlist_name = 11;\n   */\n  livePlaylistName = \"\";\n\n  /**\n   * in seconds (optional)\n   *\n   * @generated from field: uint32 segment_duration = 4;\n   */\n  segmentDuration = 0;\n\n  /**\n   * (optional, default INDEX)\n   *\n   * @generated from field: livekit.SegmentedFileSuffix filename_suffix = 10;\n   */\n  filenameSuffix = SegmentedFileSuffix.INDEX;\n\n  /**\n   * disable upload of manifest file (default false)\n   *\n   * @generated from field: bool disable_manifest = 8;\n   */\n  disableManifest = false;\n\n  /**\n   * required\n   *\n   * @generated from oneof livekit.SegmentedFileOutput.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.S3Upload s3 = 5;\n     */\n    value: S3Upload;\n    case: \"s3\";\n  } | {\n    /**\n     * @generated from field: livekit.GCPUpload gcp = 6;\n     */\n    value: GCPUpload;\n    case: \"gcp\";\n  } | {\n    /**\n     * @generated from field: livekit.AzureBlobUpload azure = 7;\n     */\n    value: AzureBlobUpload;\n    case: \"azure\";\n  } | {\n    /**\n     * @generated from field: livekit.AliOSSUpload aliOSS = 9;\n     */\n    value: AliOSSUpload;\n    case: \"aliOSS\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<SegmentedFileOutput>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SegmentedFileOutput\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"protocol\", kind: \"enum\", T: proto3.getEnumType(SegmentedFileProtocol) },\n    { no: 2, name: \"filename_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"playlist_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"live_playlist_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"segment_duration\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 10, name: \"filename_suffix\", kind: \"enum\", T: proto3.getEnumType(SegmentedFileSuffix) },\n    { no: 8, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 6, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 7, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 9, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SegmentedFileOutput {\n    return new SegmentedFileOutput().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SegmentedFileOutput {\n    return new SegmentedFileOutput().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SegmentedFileOutput {\n    return new SegmentedFileOutput().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SegmentedFileOutput | PlainMessage<SegmentedFileOutput> | undefined, b: SegmentedFileOutput | PlainMessage<SegmentedFileOutput> | undefined): boolean {\n    return proto3.util.equals(SegmentedFileOutput, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.DirectFileOutput\n */\nexport class DirectFileOutput extends Message<DirectFileOutput> {\n  /**\n   * see egress docs for templating (default {track_id}-{time})\n   *\n   * @generated from field: string filepath = 1;\n   */\n  filepath = \"\";\n\n  /**\n   * disable upload of manifest file (default false)\n   *\n   * @generated from field: bool disable_manifest = 5;\n   */\n  disableManifest = false;\n\n  /**\n   * @generated from oneof livekit.DirectFileOutput.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.S3Upload s3 = 2;\n     */\n    value: S3Upload;\n    case: \"s3\";\n  } | {\n    /**\n     * @generated from field: livekit.GCPUpload gcp = 3;\n     */\n    value: GCPUpload;\n    case: \"gcp\";\n  } | {\n    /**\n     * @generated from field: livekit.AzureBlobUpload azure = 4;\n     */\n    value: AzureBlobUpload;\n    case: \"azure\";\n  } | {\n    /**\n     * @generated from field: livekit.AliOSSUpload aliOSS = 6;\n     */\n    value: AliOSSUpload;\n    case: \"aliOSS\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<DirectFileOutput>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.DirectFileOutput\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"filepath\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 3, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 4, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 6, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectFileOutput {\n    return new DirectFileOutput().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectFileOutput {\n    return new DirectFileOutput().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectFileOutput {\n    return new DirectFileOutput().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DirectFileOutput | PlainMessage<DirectFileOutput> | undefined, b: DirectFileOutput | PlainMessage<DirectFileOutput> | undefined): boolean {\n    return proto3.util.equals(DirectFileOutput, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ImageOutput\n */\nexport class ImageOutput extends Message<ImageOutput> {\n  /**\n   * in seconds (required)\n   *\n   * @generated from field: uint32 capture_interval = 1;\n   */\n  captureInterval = 0;\n\n  /**\n   * (optional, defaults to track width)\n   *\n   * @generated from field: int32 width = 2;\n   */\n  width = 0;\n\n  /**\n   * (optional, defaults to track height)\n   *\n   * @generated from field: int32 height = 3;\n   */\n  height = 0;\n\n  /**\n   * (optional)\n   *\n   * @generated from field: string filename_prefix = 4;\n   */\n  filenamePrefix = \"\";\n\n  /**\n   * (optional, default INDEX)\n   *\n   * @generated from field: livekit.ImageFileSuffix filename_suffix = 5;\n   */\n  filenameSuffix = ImageFileSuffix.IMAGE_SUFFIX_INDEX;\n\n  /**\n   * (optional)\n   *\n   * @generated from field: livekit.ImageCodec image_codec = 6;\n   */\n  imageCodec = ImageCodec.IC_DEFAULT;\n\n  /**\n   * disable upload of manifest file (default false)\n   *\n   * @generated from field: bool disable_manifest = 7;\n   */\n  disableManifest = false;\n\n  /**\n   * required\n   *\n   * @generated from oneof livekit.ImageOutput.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.S3Upload s3 = 8;\n     */\n    value: S3Upload;\n    case: \"s3\";\n  } | {\n    /**\n     * @generated from field: livekit.GCPUpload gcp = 9;\n     */\n    value: GCPUpload;\n    case: \"gcp\";\n  } | {\n    /**\n     * @generated from field: livekit.AzureBlobUpload azure = 10;\n     */\n    value: AzureBlobUpload;\n    case: \"azure\";\n  } | {\n    /**\n     * @generated from field: livekit.AliOSSUpload aliOSS = 11;\n     */\n    value: AliOSSUpload;\n    case: \"aliOSS\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<ImageOutput>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ImageOutput\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"capture_interval\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 2, name: \"width\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"height\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"filename_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"filename_suffix\", kind: \"enum\", T: proto3.getEnumType(ImageFileSuffix) },\n    { no: 6, name: \"image_codec\", kind: \"enum\", T: proto3.getEnumType(ImageCodec) },\n    { no: 7, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 9, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 10, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 11, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageOutput {\n    return new ImageOutput().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageOutput {\n    return new ImageOutput().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageOutput {\n    return new ImageOutput().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ImageOutput | PlainMessage<ImageOutput> | undefined, b: ImageOutput | PlainMessage<ImageOutput> | undefined): boolean {\n    return proto3.util.equals(ImageOutput, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.S3Upload\n */\nexport class S3Upload extends Message<S3Upload> {\n  /**\n   * @generated from field: string access_key = 1;\n   */\n  accessKey = \"\";\n\n  /**\n   * @generated from field: string secret = 2;\n   */\n  secret = \"\";\n\n  /**\n   * @generated from field: string session_token = 11;\n   */\n  sessionToken = \"\";\n\n  /**\n   * @generated from field: string region = 3;\n   */\n  region = \"\";\n\n  /**\n   * @generated from field: string endpoint = 4;\n   */\n  endpoint = \"\";\n\n  /**\n   * @generated from field: string bucket = 5;\n   */\n  bucket = \"\";\n\n  /**\n   * @generated from field: bool force_path_style = 6;\n   */\n  forcePathStyle = false;\n\n  /**\n   * @generated from field: map<string, string> metadata = 7;\n   */\n  metadata: { [key: string]: string } = {};\n\n  /**\n   * @generated from field: string tagging = 8;\n   */\n  tagging = \"\";\n\n  /**\n   * Content-Disposition header\n   *\n   * @generated from field: string content_disposition = 9;\n   */\n  contentDisposition = \"\";\n\n  /**\n   * @generated from field: livekit.ProxyConfig proxy = 10;\n   */\n  proxy?: ProxyConfig;\n\n  constructor(data?: PartialMessage<S3Upload>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.S3Upload\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"access_key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"secret\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"session_token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"endpoint\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"bucket\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"force_path_style\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 7, name: \"metadata\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 8, name: \"tagging\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"content_disposition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"proxy\", kind: \"message\", T: ProxyConfig },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): S3Upload {\n    return new S3Upload().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): S3Upload {\n    return new S3Upload().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): S3Upload {\n    return new S3Upload().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: S3Upload | PlainMessage<S3Upload> | undefined, b: S3Upload | PlainMessage<S3Upload> | undefined): boolean {\n    return proto3.util.equals(S3Upload, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.GCPUpload\n */\nexport class GCPUpload extends Message<GCPUpload> {\n  /**\n   * service account credentials serialized in JSON \"credentials.json\"\n   *\n   * @generated from field: string credentials = 1;\n   */\n  credentials = \"\";\n\n  /**\n   * @generated from field: string bucket = 2;\n   */\n  bucket = \"\";\n\n  /**\n   * @generated from field: livekit.ProxyConfig proxy = 3;\n   */\n  proxy?: ProxyConfig;\n\n  constructor(data?: PartialMessage<GCPUpload>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.GCPUpload\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"credentials\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"bucket\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"proxy\", kind: \"message\", T: ProxyConfig },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GCPUpload {\n    return new GCPUpload().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GCPUpload {\n    return new GCPUpload().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GCPUpload {\n    return new GCPUpload().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GCPUpload | PlainMessage<GCPUpload> | undefined, b: GCPUpload | PlainMessage<GCPUpload> | undefined): boolean {\n    return proto3.util.equals(GCPUpload, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.AzureBlobUpload\n */\nexport class AzureBlobUpload extends Message<AzureBlobUpload> {\n  /**\n   * @generated from field: string account_name = 1;\n   */\n  accountName = \"\";\n\n  /**\n   * @generated from field: string account_key = 2;\n   */\n  accountKey = \"\";\n\n  /**\n   * @generated from field: string container_name = 3;\n   */\n  containerName = \"\";\n\n  constructor(data?: PartialMessage<AzureBlobUpload>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.AzureBlobUpload\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"account_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"account_key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"container_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AzureBlobUpload {\n    return new AzureBlobUpload().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AzureBlobUpload {\n    return new AzureBlobUpload().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AzureBlobUpload {\n    return new AzureBlobUpload().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AzureBlobUpload | PlainMessage<AzureBlobUpload> | undefined, b: AzureBlobUpload | PlainMessage<AzureBlobUpload> | undefined): boolean {\n    return proto3.util.equals(AzureBlobUpload, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.AliOSSUpload\n */\nexport class AliOSSUpload extends Message<AliOSSUpload> {\n  /**\n   * @generated from field: string access_key = 1;\n   */\n  accessKey = \"\";\n\n  /**\n   * @generated from field: string secret = 2;\n   */\n  secret = \"\";\n\n  /**\n   * @generated from field: string region = 3;\n   */\n  region = \"\";\n\n  /**\n   * @generated from field: string endpoint = 4;\n   */\n  endpoint = \"\";\n\n  /**\n   * @generated from field: string bucket = 5;\n   */\n  bucket = \"\";\n\n  constructor(data?: PartialMessage<AliOSSUpload>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.AliOSSUpload\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"access_key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"secret\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"endpoint\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"bucket\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AliOSSUpload {\n    return new AliOSSUpload().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AliOSSUpload {\n    return new AliOSSUpload().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AliOSSUpload {\n    return new AliOSSUpload().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AliOSSUpload | PlainMessage<AliOSSUpload> | undefined, b: AliOSSUpload | PlainMessage<AliOSSUpload> | undefined): boolean {\n    return proto3.util.equals(AliOSSUpload, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ProxyConfig\n */\nexport class ProxyConfig extends Message<ProxyConfig> {\n  /**\n   * @generated from field: string url = 1;\n   */\n  url = \"\";\n\n  /**\n   * @generated from field: string username = 2;\n   */\n  username = \"\";\n\n  /**\n   * @generated from field: string password = 3;\n   */\n  password = \"\";\n\n  constructor(data?: PartialMessage<ProxyConfig>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ProxyConfig\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProxyConfig {\n    return new ProxyConfig().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProxyConfig {\n    return new ProxyConfig().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProxyConfig {\n    return new ProxyConfig().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ProxyConfig | PlainMessage<ProxyConfig> | undefined, b: ProxyConfig | PlainMessage<ProxyConfig> | undefined): boolean {\n    return proto3.util.equals(ProxyConfig, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.StreamOutput\n */\nexport class StreamOutput extends Message<StreamOutput> {\n  /**\n   * required\n   *\n   * @generated from field: livekit.StreamProtocol protocol = 1;\n   */\n  protocol = StreamProtocol.DEFAULT_PROTOCOL;\n\n  /**\n   * required\n   *\n   * @generated from field: repeated string urls = 2;\n   */\n  urls: string[] = [];\n\n  constructor(data?: PartialMessage<StreamOutput>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.StreamOutput\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"protocol\", kind: \"enum\", T: proto3.getEnumType(StreamProtocol) },\n    { no: 2, name: \"urls\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamOutput {\n    return new StreamOutput().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamOutput {\n    return new StreamOutput().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamOutput {\n    return new StreamOutput().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamOutput | PlainMessage<StreamOutput> | undefined, b: StreamOutput | PlainMessage<StreamOutput> | undefined): boolean {\n    return proto3.util.equals(StreamOutput, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.EncodingOptions\n */\nexport class EncodingOptions extends Message<EncodingOptions> {\n  /**\n   * (default 1920)\n   *\n   * @generated from field: int32 width = 1;\n   */\n  width = 0;\n\n  /**\n   * (default 1080)\n   *\n   * @generated from field: int32 height = 2;\n   */\n  height = 0;\n\n  /**\n   * (default 24)\n   *\n   * @generated from field: int32 depth = 3;\n   */\n  depth = 0;\n\n  /**\n   * (default 30)\n   *\n   * @generated from field: int32 framerate = 4;\n   */\n  framerate = 0;\n\n  /**\n   * (default OPUS)\n   *\n   * @generated from field: livekit.AudioCodec audio_codec = 5;\n   */\n  audioCodec = AudioCodec.DEFAULT_AC;\n\n  /**\n   * (default 128)\n   *\n   * @generated from field: int32 audio_bitrate = 6;\n   */\n  audioBitrate = 0;\n\n  /**\n   * quality setting on audio encoder\n   *\n   * @generated from field: int32 audio_quality = 11;\n   */\n  audioQuality = 0;\n\n  /**\n   * (default 44100)\n   *\n   * @generated from field: int32 audio_frequency = 7;\n   */\n  audioFrequency = 0;\n\n  /**\n   * (default H264_MAIN)\n   *\n   * @generated from field: livekit.VideoCodec video_codec = 8;\n   */\n  videoCodec = VideoCodec.DEFAULT_VC;\n\n  /**\n   * (default 4500)\n   *\n   * @generated from field: int32 video_bitrate = 9;\n   */\n  videoBitrate = 0;\n\n  /**\n   * quality setting on video encoder\n   *\n   * @generated from field: int32 video_quality = 12;\n   */\n  videoQuality = 0;\n\n  /**\n   * in seconds (default 4s for streaming, segment duration for segmented output, encoder default for files)\n   *\n   * @generated from field: double key_frame_interval = 10;\n   */\n  keyFrameInterval = 0;\n\n  constructor(data?: PartialMessage<EncodingOptions>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.EncodingOptions\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"width\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"height\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"depth\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"framerate\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 5, name: \"audio_codec\", kind: \"enum\", T: proto3.getEnumType(AudioCodec) },\n    { no: 6, name: \"audio_bitrate\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 11, name: \"audio_quality\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 7, name: \"audio_frequency\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 8, name: \"video_codec\", kind: \"enum\", T: proto3.getEnumType(VideoCodec) },\n    { no: 9, name: \"video_bitrate\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 12, name: \"video_quality\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 10, name: \"key_frame_interval\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncodingOptions {\n    return new EncodingOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncodingOptions {\n    return new EncodingOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncodingOptions {\n    return new EncodingOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: EncodingOptions | PlainMessage<EncodingOptions> | undefined, b: EncodingOptions | PlainMessage<EncodingOptions> | undefined): boolean {\n    return proto3.util.equals(EncodingOptions, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateLayoutRequest\n */\nexport class UpdateLayoutRequest extends Message<UpdateLayoutRequest> {\n  /**\n   * @generated from field: string egress_id = 1;\n   */\n  egressId = \"\";\n\n  /**\n   * @generated from field: string layout = 2;\n   */\n  layout = \"\";\n\n  constructor(data?: PartialMessage<UpdateLayoutRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateLayoutRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"layout\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateLayoutRequest {\n    return new UpdateLayoutRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateLayoutRequest {\n    return new UpdateLayoutRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateLayoutRequest {\n    return new UpdateLayoutRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateLayoutRequest | PlainMessage<UpdateLayoutRequest> | undefined, b: UpdateLayoutRequest | PlainMessage<UpdateLayoutRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateLayoutRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.UpdateStreamRequest\n */\nexport class UpdateStreamRequest extends Message<UpdateStreamRequest> {\n  /**\n   * @generated from field: string egress_id = 1;\n   */\n  egressId = \"\";\n\n  /**\n   * @generated from field: repeated string add_output_urls = 2;\n   */\n  addOutputUrls: string[] = [];\n\n  /**\n   * @generated from field: repeated string remove_output_urls = 3;\n   */\n  removeOutputUrls: string[] = [];\n\n  constructor(data?: PartialMessage<UpdateStreamRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.UpdateStreamRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"add_output_urls\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"remove_output_urls\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateStreamRequest {\n    return new UpdateStreamRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateStreamRequest {\n    return new UpdateStreamRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateStreamRequest {\n    return new UpdateStreamRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateStreamRequest | PlainMessage<UpdateStreamRequest> | undefined, b: UpdateStreamRequest | PlainMessage<UpdateStreamRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateStreamRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListEgressRequest\n */\nexport class ListEgressRequest extends Message<ListEgressRequest> {\n  /**\n   * (optional, filter by room name)\n   *\n   * @generated from field: string room_name = 1;\n   */\n  roomName = \"\";\n\n  /**\n   * (optional, filter by egress ID)\n   *\n   * @generated from field: string egress_id = 2;\n   */\n  egressId = \"\";\n\n  /**\n   * (optional, list active egress only)\n   *\n   * @generated from field: bool active = 3;\n   */\n  active = false;\n\n  constructor(data?: PartialMessage<ListEgressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListEgressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"active\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEgressRequest {\n    return new ListEgressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEgressRequest {\n    return new ListEgressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEgressRequest {\n    return new ListEgressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListEgressRequest | PlainMessage<ListEgressRequest> | undefined, b: ListEgressRequest | PlainMessage<ListEgressRequest> | undefined): boolean {\n    return proto3.util.equals(ListEgressRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ListEgressResponse\n */\nexport class ListEgressResponse extends Message<ListEgressResponse> {\n  /**\n   * @generated from field: repeated livekit.EgressInfo items = 1;\n   */\n  items: EgressInfo[] = [];\n\n  constructor(data?: PartialMessage<ListEgressResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ListEgressResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"items\", kind: \"message\", T: EgressInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEgressResponse {\n    return new ListEgressResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEgressResponse {\n    return new ListEgressResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEgressResponse {\n    return new ListEgressResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListEgressResponse | PlainMessage<ListEgressResponse> | undefined, b: ListEgressResponse | PlainMessage<ListEgressResponse> | undefined): boolean {\n    return proto3.util.equals(ListEgressResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.StopEgressRequest\n */\nexport class StopEgressRequest extends Message<StopEgressRequest> {\n  /**\n   * @generated from field: string egress_id = 1;\n   */\n  egressId = \"\";\n\n  constructor(data?: PartialMessage<StopEgressRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.StopEgressRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopEgressRequest {\n    return new StopEgressRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopEgressRequest {\n    return new StopEgressRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopEgressRequest {\n    return new StopEgressRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StopEgressRequest | PlainMessage<StopEgressRequest> | undefined, b: StopEgressRequest | PlainMessage<StopEgressRequest> | undefined): boolean {\n    return proto3.util.equals(StopEgressRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.EgressInfo\n */\nexport class EgressInfo extends Message<EgressInfo> {\n  /**\n   * @generated from field: string egress_id = 1;\n   */\n  egressId = \"\";\n\n  /**\n   * @generated from field: string room_id = 2;\n   */\n  roomId = \"\";\n\n  /**\n   * @generated from field: string room_name = 13;\n   */\n  roomName = \"\";\n\n  /**\n   * @generated from field: livekit.EgressStatus status = 3;\n   */\n  status = EgressStatus.EGRESS_STARTING;\n\n  /**\n   * @generated from field: int64 started_at = 10;\n   */\n  startedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 ended_at = 11;\n   */\n  endedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 updated_at = 18;\n   */\n  updatedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: string details = 21;\n   */\n  details = \"\";\n\n  /**\n   * @generated from field: string error = 9;\n   */\n  error = \"\";\n\n  /**\n   * @generated from field: int32 error_code = 22;\n   */\n  errorCode = 0;\n\n  /**\n   * @generated from oneof livekit.EgressInfo.request\n   */\n  request: {\n    /**\n     * @generated from field: livekit.RoomCompositeEgressRequest room_composite = 4;\n     */\n    value: RoomCompositeEgressRequest;\n    case: \"roomComposite\";\n  } | {\n    /**\n     * @generated from field: livekit.WebEgressRequest web = 14;\n     */\n    value: WebEgressRequest;\n    case: \"web\";\n  } | {\n    /**\n     * @generated from field: livekit.ParticipantEgressRequest participant = 19;\n     */\n    value: ParticipantEgressRequest;\n    case: \"participant\";\n  } | {\n    /**\n     * @generated from field: livekit.TrackCompositeEgressRequest track_composite = 5;\n     */\n    value: TrackCompositeEgressRequest;\n    case: \"trackComposite\";\n  } | {\n    /**\n     * @generated from field: livekit.TrackEgressRequest track = 6;\n     */\n    value: TrackEgressRequest;\n    case: \"track\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * deprecated (use _result fields)\n   *\n   * @generated from oneof livekit.EgressInfo.result\n   */\n  result: {\n    /**\n     * @generated from field: livekit.StreamInfoList stream = 7 [deprecated = true];\n     * @deprecated\n     */\n    value: StreamInfoList;\n    case: \"stream\";\n  } | {\n    /**\n     * @generated from field: livekit.FileInfo file = 8 [deprecated = true];\n     * @deprecated\n     */\n    value: FileInfo;\n    case: \"file\";\n  } | {\n    /**\n     * @generated from field: livekit.SegmentsInfo segments = 12 [deprecated = true];\n     * @deprecated\n     */\n    value: SegmentsInfo;\n    case: \"segments\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from field: repeated livekit.StreamInfo stream_results = 15;\n   */\n  streamResults: StreamInfo[] = [];\n\n  /**\n   * @generated from field: repeated livekit.FileInfo file_results = 16;\n   */\n  fileResults: FileInfo[] = [];\n\n  /**\n   * @generated from field: repeated livekit.SegmentsInfo segment_results = 17;\n   */\n  segmentResults: SegmentsInfo[] = [];\n\n  /**\n   * @generated from field: repeated livekit.ImagesInfo image_results = 20;\n   */\n  imageResults: ImagesInfo[] = [];\n\n  /**\n   * @generated from field: string manifest_location = 23;\n   */\n  manifestLocation = \"\";\n\n  /**\n   * next ID: 26\n   *\n   * @generated from field: bool backup_storage_used = 25;\n   */\n  backupStorageUsed = false;\n\n  constructor(data?: PartialMessage<EgressInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.EgressInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"status\", kind: \"enum\", T: proto3.getEnumType(EgressStatus) },\n    { no: 10, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 11, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 18, name: \"updated_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 21, name: \"details\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 22, name: \"error_code\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"room_composite\", kind: \"message\", T: RoomCompositeEgressRequest, oneof: \"request\" },\n    { no: 14, name: \"web\", kind: \"message\", T: WebEgressRequest, oneof: \"request\" },\n    { no: 19, name: \"participant\", kind: \"message\", T: ParticipantEgressRequest, oneof: \"request\" },\n    { no: 5, name: \"track_composite\", kind: \"message\", T: TrackCompositeEgressRequest, oneof: \"request\" },\n    { no: 6, name: \"track\", kind: \"message\", T: TrackEgressRequest, oneof: \"request\" },\n    { no: 7, name: \"stream\", kind: \"message\", T: StreamInfoList, oneof: \"result\" },\n    { no: 8, name: \"file\", kind: \"message\", T: FileInfo, oneof: \"result\" },\n    { no: 12, name: \"segments\", kind: \"message\", T: SegmentsInfo, oneof: \"result\" },\n    { no: 15, name: \"stream_results\", kind: \"message\", T: StreamInfo, repeated: true },\n    { no: 16, name: \"file_results\", kind: \"message\", T: FileInfo, repeated: true },\n    { no: 17, name: \"segment_results\", kind: \"message\", T: SegmentsInfo, repeated: true },\n    { no: 20, name: \"image_results\", kind: \"message\", T: ImagesInfo, repeated: true },\n    { no: 23, name: \"manifest_location\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 25, name: \"backup_storage_used\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EgressInfo {\n    return new EgressInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EgressInfo {\n    return new EgressInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EgressInfo {\n    return new EgressInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: EgressInfo | PlainMessage<EgressInfo> | undefined, b: EgressInfo | PlainMessage<EgressInfo> | undefined): boolean {\n    return proto3.util.equals(EgressInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.StreamInfoList\n * @deprecated\n */\nexport class StreamInfoList extends Message<StreamInfoList> {\n  /**\n   * @generated from field: repeated livekit.StreamInfo info = 1;\n   */\n  info: StreamInfo[] = [];\n\n  constructor(data?: PartialMessage<StreamInfoList>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.StreamInfoList\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"info\", kind: \"message\", T: StreamInfo, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamInfoList {\n    return new StreamInfoList().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamInfoList {\n    return new StreamInfoList().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamInfoList {\n    return new StreamInfoList().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamInfoList | PlainMessage<StreamInfoList> | undefined, b: StreamInfoList | PlainMessage<StreamInfoList> | undefined): boolean {\n    return proto3.util.equals(StreamInfoList, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.StreamInfo\n */\nexport class StreamInfo extends Message<StreamInfo> {\n  /**\n   * @generated from field: string url = 1;\n   */\n  url = \"\";\n\n  /**\n   * @generated from field: int64 started_at = 2;\n   */\n  startedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 ended_at = 3;\n   */\n  endedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 duration = 4;\n   */\n  duration = protoInt64.zero;\n\n  /**\n   * @generated from field: livekit.StreamInfo.Status status = 5;\n   */\n  status = StreamInfo_Status.ACTIVE;\n\n  /**\n   * @generated from field: string error = 6;\n   */\n  error = \"\";\n\n  constructor(data?: PartialMessage<StreamInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.StreamInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"duration\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"status\", kind: \"enum\", T: proto3.getEnumType(StreamInfo_Status) },\n    { no: 6, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamInfo {\n    return new StreamInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamInfo {\n    return new StreamInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamInfo {\n    return new StreamInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamInfo | PlainMessage<StreamInfo> | undefined, b: StreamInfo | PlainMessage<StreamInfo> | undefined): boolean {\n    return proto3.util.equals(StreamInfo, a, b);\n  }\n}\n\n/**\n * @generated from enum livekit.StreamInfo.Status\n */\nexport enum StreamInfo_Status {\n  /**\n   * @generated from enum value: ACTIVE = 0;\n   */\n  ACTIVE = 0,\n\n  /**\n   * @generated from enum value: FINISHED = 1;\n   */\n  FINISHED = 1,\n\n  /**\n   * @generated from enum value: FAILED = 2;\n   */\n  FAILED = 2,\n}\n// Retrieve enum metadata with: proto3.getEnumType(StreamInfo_Status)\nproto3.util.setEnumType(StreamInfo_Status, \"livekit.StreamInfo.Status\", [\n  { no: 0, name: \"ACTIVE\" },\n  { no: 1, name: \"FINISHED\" },\n  { no: 2, name: \"FAILED\" },\n]);\n\n/**\n * @generated from message livekit.FileInfo\n */\nexport class FileInfo extends Message<FileInfo> {\n  /**\n   * @generated from field: string filename = 1;\n   */\n  filename = \"\";\n\n  /**\n   * @generated from field: int64 started_at = 2;\n   */\n  startedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 ended_at = 3;\n   */\n  endedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 duration = 6;\n   */\n  duration = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 size = 4;\n   */\n  size = protoInt64.zero;\n\n  /**\n   * @generated from field: string location = 5;\n   */\n  location = \"\";\n\n  constructor(data?: PartialMessage<FileInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.FileInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"filename\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 6, name: \"duration\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"size\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"location\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileInfo {\n    return new FileInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileInfo {\n    return new FileInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileInfo {\n    return new FileInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: FileInfo | PlainMessage<FileInfo> | undefined, b: FileInfo | PlainMessage<FileInfo> | undefined): boolean {\n    return proto3.util.equals(FileInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.SegmentsInfo\n */\nexport class SegmentsInfo extends Message<SegmentsInfo> {\n  /**\n   * @generated from field: string playlist_name = 1;\n   */\n  playlistName = \"\";\n\n  /**\n   * @generated from field: string live_playlist_name = 8;\n   */\n  livePlaylistName = \"\";\n\n  /**\n   * @generated from field: int64 duration = 2;\n   */\n  duration = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 size = 3;\n   */\n  size = protoInt64.zero;\n\n  /**\n   * @generated from field: string playlist_location = 4;\n   */\n  playlistLocation = \"\";\n\n  /**\n   * @generated from field: string live_playlist_location = 9;\n   */\n  livePlaylistLocation = \"\";\n\n  /**\n   * @generated from field: int64 segment_count = 5;\n   */\n  segmentCount = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 started_at = 6;\n   */\n  startedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 ended_at = 7;\n   */\n  endedAt = protoInt64.zero;\n\n  constructor(data?: PartialMessage<SegmentsInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.SegmentsInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"playlist_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"live_playlist_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"duration\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"size\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"playlist_location\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"live_playlist_location\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"segment_count\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 6, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 7, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SegmentsInfo {\n    return new SegmentsInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SegmentsInfo {\n    return new SegmentsInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SegmentsInfo {\n    return new SegmentsInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: SegmentsInfo | PlainMessage<SegmentsInfo> | undefined, b: SegmentsInfo | PlainMessage<SegmentsInfo> | undefined): boolean {\n    return proto3.util.equals(SegmentsInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.ImagesInfo\n */\nexport class ImagesInfo extends Message<ImagesInfo> {\n  /**\n   * @generated from field: string filename_prefix = 4;\n   */\n  filenamePrefix = \"\";\n\n  /**\n   * @generated from field: int64 image_count = 1;\n   */\n  imageCount = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 started_at = 2;\n   */\n  startedAt = protoInt64.zero;\n\n  /**\n   * @generated from field: int64 ended_at = 3;\n   */\n  endedAt = protoInt64.zero;\n\n  constructor(data?: PartialMessage<ImagesInfo>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.ImagesInfo\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 4, name: \"filename_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 1, name: \"image_count\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagesInfo {\n    return new ImagesInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagesInfo {\n    return new ImagesInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagesInfo {\n    return new ImagesInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ImagesInfo | PlainMessage<ImagesInfo> | undefined, b: ImagesInfo | PlainMessage<ImagesInfo> | undefined): boolean {\n    return proto3.util.equals(ImagesInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.AutoParticipantEgress\n */\nexport class AutoParticipantEgress extends Message<AutoParticipantEgress> {\n  /**\n   * @generated from oneof livekit.AutoParticipantEgress.options\n   */\n  options: {\n    /**\n     * (default H264_720P_30)\n     *\n     * @generated from field: livekit.EncodingOptionsPreset preset = 1;\n     */\n    value: EncodingOptionsPreset;\n    case: \"preset\";\n  } | {\n    /**\n     * (optional)\n     *\n     * @generated from field: livekit.EncodingOptions advanced = 2;\n     */\n    value: EncodingOptions;\n    case: \"advanced\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  /**\n   * @generated from field: repeated livekit.EncodedFileOutput file_outputs = 3;\n   */\n  fileOutputs: EncodedFileOutput[] = [];\n\n  /**\n   * @generated from field: repeated livekit.SegmentedFileOutput segment_outputs = 4;\n   */\n  segmentOutputs: SegmentedFileOutput[] = [];\n\n  constructor(data?: PartialMessage<AutoParticipantEgress>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.AutoParticipantEgress\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 2, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 3, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 4, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AutoParticipantEgress {\n    return new AutoParticipantEgress().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AutoParticipantEgress {\n    return new AutoParticipantEgress().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AutoParticipantEgress {\n    return new AutoParticipantEgress().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AutoParticipantEgress | PlainMessage<AutoParticipantEgress> | undefined, b: AutoParticipantEgress | PlainMessage<AutoParticipantEgress> | undefined): boolean {\n    return proto3.util.equals(AutoParticipantEgress, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.AutoTrackEgress\n */\nexport class AutoTrackEgress extends Message<AutoTrackEgress> {\n  /**\n   * see docs for templating (default {track_id}-{time})\n   *\n   * @generated from field: string filepath = 1;\n   */\n  filepath = \"\";\n\n  /**\n   * disables upload of json manifest file (default false)\n   *\n   * @generated from field: bool disable_manifest = 5;\n   */\n  disableManifest = false;\n\n  /**\n   * @generated from oneof livekit.AutoTrackEgress.output\n   */\n  output: {\n    /**\n     * @generated from field: livekit.S3Upload s3 = 2;\n     */\n    value: S3Upload;\n    case: \"s3\";\n  } | {\n    /**\n     * @generated from field: livekit.GCPUpload gcp = 3;\n     */\n    value: GCPUpload;\n    case: \"gcp\";\n  } | {\n    /**\n     * @generated from field: livekit.AzureBlobUpload azure = 4;\n     */\n    value: AzureBlobUpload;\n    case: \"azure\";\n  } | {\n    /**\n     * @generated from field: livekit.AliOSSUpload aliOSS = 6;\n     */\n    value: AliOSSUpload;\n    case: \"aliOSS\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<AutoTrackEgress>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"livekit.AutoTrackEgress\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"filepath\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 3, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 4, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 6, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AutoTrackEgress {\n    return new AutoTrackEgress().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AutoTrackEgress {\n    return new AutoTrackEgress().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AutoTrackEgress {\n    return new AutoTrackEgress().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AutoTrackEgress | PlainMessage<AutoTrackEgress> | undefined, b: AutoTrackEgress | PlainMessage<AutoTrackEgress> | undefined): boolean {\n    return proto3.util.equals(AutoTrackEgress, a, b);\n  }\n}\n\n"],"mappings":"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","names":["EncodedFileType","SegmentedFileProtocol","SegmentedFileSuffix","ImageFileSuffix","StreamProtocol","EncodingOptionsPreset","EgressStatus","StreamInfo_Status"]}